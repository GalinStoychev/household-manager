{"version":3,"sources":["kendo.dataviz.core.js"],"names":["f","define","$","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","text","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","textContent","appendChild","body","String","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","isArray","Array","addClass","element","classes","idx","className","classArray","indexOf","removeClass","replace","SPACE_REGEX","alignPathToPixel","path","offset","stroke","drawing","defined","segments","anchor","round","translate","clockwise","angle1","angle2","x","y","isObject","isString","STRING","isNumber","isNaN","styleValue","isSizeField","field","SIZE_STYLES_REGEX","test","elementStyles","styles","result","field$1","stylesArray","getComputedStyle","parseFloat","getSpacing","defaultSpacing","spacing","top","right","bottom","left","TOP","RIGHT","BOTTOM","LEFT","grep","array","callback","hasClasses","classNames","names","split","inArray","interpolateValue","start","end","progress","COORD_PRECISION","isFunction","fn","mousewheelDelta","e","delta","wheelDelta","Math","ceil","floor","detail","setDefaultOptions","type","proto","prototype","sparseArrayLimits","arr","min","MAX_VALUE","max","MIN_VALUE","isFinite","undefined","rotatePoint","cx","cy","angle","theta","rad","Point","cos","sin","numericComparer","a","b","boxDiff","r","s","c","d","g","h","boxes","x1","y1","x2","y2","Box","innerRadialStops","currentStop","stops","usedSpace","innerRadius","radius","currentStops","rectToBox","rect","origin","bottomRight","createAxisTick","tickOptions","tickX","tickY","position","tick","Path","color","vertical","moveTo","lineTo","createAxisGridLine","gridLine","lineStart","lineEnd","line","dashType","absoluteDateDiff","diff","getTime","offsetDiff","getTimezoneOffset","TIME_PER_MINUTE","addTicks","date","ticks","Date","toDate","startOfWeek","weekStartDay","daysToSubtract","day","getDay","TIME_PER_DAY","adjustDST","hours","getHours","setHours","addHours","tzDiff","roundedDate","setMinutes","TIME_PER_HOUR","addDuration","dateValue","unit","YEARS","getFullYear","MONTHS","getMonth","WEEKS","DAYS","getDate","HOURS","MINUTES","getSeconds","setSeconds","SECONDS","TIME_PER_SECOND","MILLISECONDS","getMilliseconds","setMilliseconds","floorDate","ceilDate","dateComparer","dateDiff","toTime","dateEquals","timeIndex","baseUnit","TIME_PER_UNIT","dateIndex","baseUnitStep","index","startDate","duration","lteDateIndex","sortedDates","currentDate","low","high","parseDate","intlService","parseDates","dates","autoMajorUnit","scale","relativeValue","scaleMultiplier","DEFAULT_PRECISION","abs","pow","log","autoAxisMin","narrow","axisMin","minValue","ZERO_THRESHOLD","autoAxisMax","axisMax","maxValue","step","limitCoordinate","COORDINATE_LIMIT","autoAxisOptions","seriesMin","seriesMax","narrowRange","autoMin","autoMax","majorUnit","autoOptions","roundToMajorUnit","remainderClose","totalAxisOptions","axisOptions","userOptions","userSetLimits","minorUnit","divisor","ratio","remainder","threshold","timeUnits","TIME_PER_YEAR","TIME_PER_MONTH","TIME_PER_WEEK","applyDefaults","baseUnitTime","userMajorUnit","actualUnits","totalUnits","unitsToAdd","head","tail","initRange","axisCrossingValue","throwNegativeValuesError","autoAxisMin$1","base","autoAxisMax$1","logMaxRemainder","Error","angularDistance","numberSign","Group","geometry","Rect","Circle","geometryTransform","Segment","dataviz","__common_getter_js","X","Y","CENTER","WIDTH","HEIGHT","DEFAULT_WIDTH","DEFAULT_HEIGHT","WHITE","BLACK","DEFAULT_FONT","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","OUTSIDE","NONE","CIRCLE","TRIANGLE","CROSS","ARC","INSIDE","VALUE","OBJECT","DATE","FORMAT_REGEX","constants","InstanceObserver","ref","append","bindEvents","deg","elementOffset","elementSize","eventElement","eventCoordinates","last","limitValue","unbindEvents","valueOrDefault","FontLoader","Ring","Sector","ShapeBuilder","ChartElement","BoxElement","ShapeElement","LINEAR","RADIAL","GRADIENTS","RootElement","FloatElement","DrawingText","Text","ROWS_SPLIT_REGEX","TextBox","Title","AxisLabel","defaultImplementation","IntlService","FORMAT_REPLACE_REGEX","FormatService","ChartService","current$1","DomEventsBuilder","current$2","TemplateService","services","DEFAULT_ICON_SIZE","DEFAULT_LABEL_COLOR","Note","Axis","MIN_CATEGORY_POINTS_RANGE","CategoryAxis","TIME_PER_MILLISECOND","DateLabelFormats","AUTO","BASE_UNITS","FIT","DateCategoryAxis","MIN_VALUE_RANGE","NumericAxis","DateValueAxis","DEFAULT_MAJOR_UNIT","LogarithmicAxis","GridLinesMixin","RadarCategoryAxis","PolarAxis","RadarNumericAxisMixin","RadarNumericAxis","RadarLogarithmicAxis","WEIGHT","EXTREMUM_ALLOWED_DEVIATION","CurveProcessor","transform","getter","Number","observer","handlers","handlerMap","trigger","name","args","isDefaultPrevented","requiresHandlers","this$1","fetchFonts","fonts","state","depth","MAX_DEPTH","Object","keys","forEach","loadFonts","promises","font","load","logToConsole","Promise","all","then","preloadFonts","clone","equals","point","rotate","center","degrees","cosT","sinT","multiply","distanceTo","dx","dy","sqrt","onCircle","radians","move","wrap","targetBox","wrapPoint","arrayPoint","snapTo","axis","alignTo","targetCenter","shrink","dw","dh","expand","pad","padding","unpad","containsPoint","points","getHash","overlaps","rotation","r1","r2","r3","r4","toRect","hasSize","align","alignment","c1","c2","sizeFunc","startAngle","middle","setRadius","newRadius","radianAngle","ax","ay","adjacentBox","distance","sector","midAndle","midPoint","hw","hh","sa","ca","p","endAngle","vector","startPoint","startVector","endPoint","endVector","dist","getBBox","angles","allAngles","startAngleIndex","endAngleIndex","slice","concat","call","createRing","innerEnd","arc","Arc","radiusX","radiusY","fromArc","close","pointAt","children","reflow","currentChild","destroy","animation","getRoot","parent","getSender","service","getService","sender","chartService","translateChildren","childrenCount","item","arguments$1","arguments","renderVisual","visible","createVisual","addVisual","renderChildren","createAnimation","renderComplete","visual","chartElement","appendVisual","zIndex","Animation","create","childVisual","noclip","clipRoot","stackRoot","stackVisual","isStackRoot","pos","sibling","here","visuals","insert","traverse","child","closest","match","matched","hasHighlight","highlight","createHighlight","toggleHighlight","show","highlightOptions","customVisual","_highlight","fill","opacity","highlightVisualArgs","series","dataItem","category","percentage","runningTotal","total","createGradientOverlay","gradientOptions","overlay","createGradient","closed","elements","margin","shrinkToFit","hasSetSize","borderWidth","border","reflowPaddingBox","vAlign","paddingBox","contentBox","hasBox","background","fromRect","visualStyle","cursor","pointData","getElement","halfWidth","fromPoints","MultiPath","visualOptions","glass","sharpBevel","roundedBevel","roundedGlass","supportVML","sharpGlass","bubbleShadow","rootOptions","parseInt","gradients","currentBox","createBackground","drawingGradient","hashCode","gradient","LinearGradient","RadialGradient","_initDirection","groupAxis","elementAxis","groupSizeField","elementSizeField","groupSpacing","elementSpacing","vSpacing","reflowChildren","groupStart","groupIdx","group","groupElements","elementStart","groupElementsCount","elementSize$$1","groupElementStart","elementBox","ref$1","groupOptions","groups","groupsSize","maxGroupElementsSize","groupsCount","groupsStart","alignStart","groupSize","maxSize","groupElementsSize","content","topLeft","_initContainer","_autoReflow","rowIdx","rows","floatElement","textOptions","container","trim","visualBox","visualFn","_boxReflow","visualContext","clippedBBox","normalBox","rotatedBox","rotationTransform","getDefaultVisual","boxCenter","buildTitle","defaultOptions","title","titleOptions","context","format","culture","click","widget","alignRotation","bbox","matrix","rotationMatrix","rotationOrigin","alignAxis","distanceAxis","axisAnchor","topRight","bottomLeft","distanceLeft","distanceRight","alignEnd","alignCenter","transformCopy","toString","register","userImplementation","defineProperties","implementation","_intlService","auto","formatString","intl","values","len","apply","localeAuto","locale","placeholderFormat","substring","chart","notify","events","compile","template","fields","render","hide","label","icon","noteTemplate","wrapperBox","linePoints","createLine","defaultVisual","eventArgs","preventDefault","hover","leave","_unsetActivePoint","labels","majorTickSize","minorTickSize","minorTicks","minorTickType","majorTicks","majorTickType","_deferLabels","createLabels","createTitle","createNotes","labelsRange","skip","labelsCount","range","labelOptions","autoRotateLabels","createAxisLabel","lineBox","mirror","axisX","axisY","lineWidth","visualSize","note","notes","items","data","parseNoteValue","reverse","createPlotBands","gridLinesVisual","gridLines","_gridLines","createTicks","lineGroup","tickPositions","skipUnit","count","tickLineOptions","getMajorTickPositions","getMinorTickPositions","_alignLines","_lineGroup","getActualTickSize","tickSize","_backgroundPath","altAxis","slotX","slotY","bandRect","plotBands","plotArea","_plotbandGroup","pane","axes","getSlot","from","to","createGridLines","axisLineVisible","linePos","lineOptions","minorGridLines","majorGridLines","labelSize","sizeFn","titleSize","space","rootBox","boxSize","maxLabelSize","arrangeTitle","arrangeLabels","arrangeNotes","getLabelsTickPositions","labelTickIndex","tickIx","labelPos","labelBox","firstTickPosition","nextTickPosition","labelX","labelY","labelsBetweenTicks","justified","labelOffset","idx$1","slot","shouldRenderNote","noteSlot","secondAxis","axisLabelText","tmpl","limit","lastLabel","limitRange","rangeSize","valueRange","_ticks","_initCategories","categories","definedMin","definedMax","srcCategories","rangeIndices","totalRange","totalRangeIndices","_seriesMax","getScale","getTickPositions","stepSize","positions","unshift","hideOutOfRangeLabels","valueAxis","firstLabel","getTicks","cache","_hash","p1","p2","slotBox","singleSlot","categoryIndex","pointCategoryIndex","startValue","getCategory","translateRange","zoomRange","rate","totalMin","totalMax","scaleRange","dataItems","hideOutOfRangeNotes","pan","pointsRange","diffStart","diffEnd","rangeMin","rangeMax","years","months","weeks","days","minutes","seconds","milliseconds","useDefault","roundToBaseUnit","userSetBaseUnit","userSetBaseUnitStep","toLowerCase","defaultBaseUnit","autoBaseUnit","_groupsStart","groupCategories","rounds","lastCategory","categoryIx","minDiff","_categoryRange","_range","categoryLimits","categoriesRange","minIdx","maxIdx","_roundToTotalStep","currentRange","round$$1","datesRange","totalLimits","panRange","indicesRange","autoBaseUnitSteps","maxDateGroups","maxDiff","rangeDiff","baseUnitIndex","autoBaseUnitStep","stepIndex","rangeOptions","autoUnit","stepOptions","unitSteps","nextStep","span","autoUnitIx","units","shift","nextDate","maxCategory","upper","roundToNext","roundedStep","unitFormat","dateFormats","totalOptions","totalMajorUnit","getDivisions","stepValue","lineSize","divisions","dir","startEdge","skipStep","getValue","valueOffset","endValue","isValidRange","newRange","axisCrossingValues","timeRange","exact","limittedRange","logMin","logMax","floorMax","traverseMajorTicksPositions","tickPosition","traverseMinorTicksPositions","power","_lineOptions","minorOptions","ref$2","_minorIntervalOptions","minorStep","acceptOptionsRange","acceptNewRange","nextValue","difference","majorAngles","minorAngles","skipMajor","majorGridLineAngles","renderMajorGridLines","minorGridLineAngles","renderMinorGridLines","renderGridLines","radiusCallback","circle","gridLineAngles","skipAngles","divs","intervals","altAxisVisible","alpha","intervalAngle","reflowLabels","skipOption","stepOption","divCount","divAngle","majorIntervals","minorIntervals","interval","minorAngle","minorRadius","band","ring","plotBandSlot","slotStart","toValue","slots","totalDivs","slotAngle","fromValue","instanceOptions","tmp","atan2","PI","bandStyle","shape","polarAxis","plotBandPoints","innerPoints","outerPoints","innerCircle","outerCircle","radarMajorGridLinePositions","radarMinorGridLinePositions","tickRadius","angleIx","midAngle","gamma","beta","axisType","minorSkipStep","process","dataPoints","p0","tangent","initialControlPoint","lastControlPoint","controlPoints","tangent$1","cp0","controlPoints$1","cp1","controlPoints$2","tangent$2","removeDuplicates","pop","controlOut","firstControlPoint","secondControlPoint","splice","invertAxis","lineFunction","calculateFunction","isLine","monotonic","sign","oldXField","xField","yField","restrict","switchOrientation","isMonotonicByField","restrictControlPoint","cp","p3","t1","t2","xValue","yValue","controlPoint","Gradients","draw","ExportMixin","skipLegacy","exportVisual","exportSVG","exportImage","exportPDF","svg","imageDataURL","Surface","exportGroup","surface","image","support","canvas","css","display","appendTo","_rootElement","toDataURL","remove","Point2D","Box2D","mwDelta","originalEvent"],"mappings":"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","file":"kendo.dataviz.core.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                measureBox.textContent = text;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (String(text).length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/kendo-core', [\n        'kendo.core',\n        'kendo.drawing'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var drawing = kendo.drawing;\n        var util = drawing.util;\n        var Path = drawing.Path;\n        var Group = drawing.Group;\n        var Class = kendo.Class;\n        var geometry = kendo.geometry;\n        var Rect = geometry.Rect;\n        var Circle = geometry.Circle;\n        var geometryTransform = geometry.transform;\n        var Segment = geometry.Segment;\n        var dataviz = kendo.dataviz;\n        var deepExtend = kendo.deepExtend;\n        var __common_getter_js = kendo.getter;\n        var X = 'x';\n        var Y = 'y';\n        var TOP = 'top';\n        var BOTTOM = 'bottom';\n        var LEFT = 'left';\n        var RIGHT = 'right';\n        var CENTER = 'center';\n        var WIDTH = 'width';\n        var HEIGHT = 'height';\n        var COORD_PRECISION = 3;\n        var MAX_VALUE = Number.MAX_VALUE;\n        var MIN_VALUE = -Number.MAX_VALUE;\n        var DEFAULT_WIDTH = 600;\n        var DEFAULT_HEIGHT = 400;\n        var WHITE = '#fff';\n        var BLACK = '#000';\n        var DEFAULT_FONT = '12px sans-serif';\n        var DEFAULT_PRECISION = 10;\n        var AXIS_LABEL_CLICK = 'axisLabelClick';\n        var NOTE_CLICK = 'noteClick';\n        var NOTE_HOVER = 'noteHover';\n        var OUTSIDE = 'outside';\n        var NONE = 'none';\n        var CIRCLE = 'circle';\n        var TRIANGLE = 'triangle';\n        var CROSS = 'cross';\n        var ARC = 'arc';\n        var INSIDE = 'inside';\n        var VALUE = 'value';\n        var STRING = 'string';\n        var OBJECT = 'object';\n        var DATE = 'date';\n        var FORMAT_REGEX = /\\{\\d+:?/;\n        var constants = {\n            X: X,\n            Y: Y,\n            WIDTH: WIDTH,\n            HEIGHT: HEIGHT,\n            DEFAULT_HEIGHT: DEFAULT_HEIGHT,\n            DEFAULT_WIDTH: DEFAULT_WIDTH,\n            TOP: TOP,\n            LEFT: LEFT,\n            BOTTOM: BOTTOM,\n            RIGHT: RIGHT,\n            CENTER: CENTER,\n            COORD_PRECISION: COORD_PRECISION,\n            DEFAULT_PRECISION: DEFAULT_PRECISION,\n            CIRCLE: CIRCLE,\n            TRIANGLE: TRIANGLE,\n            CROSS: CROSS,\n            MAX_VALUE: MAX_VALUE,\n            MIN_VALUE: MIN_VALUE,\n            WHITE: WHITE,\n            BLACK: BLACK,\n            DEFAULT_FONT: DEFAULT_FONT,\n            AXIS_LABEL_CLICK: AXIS_LABEL_CLICK,\n            OUTSIDE: OUTSIDE,\n            INSIDE: INSIDE,\n            NONE: NONE,\n            NOTE_CLICK: NOTE_CLICK,\n            NOTE_HOVER: NOTE_HOVER,\n            VALUE: VALUE,\n            STRING: STRING,\n            OBJECT: OBJECT,\n            DATE: DATE,\n            ARC: ARC,\n            FORMAT_REGEX: FORMAT_REGEX\n        };\n        function isArray(value) {\n            return Array.isArray(value);\n        }\n        function addClass(element, classes) {\n            var classArray = isArray(classes) ? classes : [classes];\n            for (var idx = 0; idx < classArray.length; idx++) {\n                var className = classArray[idx];\n                if (element.className.indexOf(className) === -1) {\n                    element.className += ' ' + className;\n                }\n            }\n        }\n        var SPACE_REGEX = /\\s+/g;\n        function removeClass(element, className) {\n            if (element && element.className) {\n                element.className = element.className.replace(className, '').replace(SPACE_REGEX, ' ');\n            }\n        }\n        function alignPathToPixel(path) {\n            var offset = 0.5;\n            if (path.options.stroke && kendo.drawing.util.defined(path.options.stroke.width)) {\n                if (path.options.stroke.width % 2 === 0) {\n                    offset = 0;\n                }\n            }\n            for (var i = 0; i < path.segments.length; i++) {\n                path.segments[i].anchor().round(0).translate(offset, offset);\n            }\n            return path;\n        }\n        function clockwise(angle1, angle2) {\n            return -angle1.x * angle2.y + angle1.y * angle2.x < 0;\n        }\n        function isObject(value) {\n            return typeof value === 'object';\n        }\n        function isString(value) {\n            return typeof value === STRING;\n        }\n        function isNumber(value) {\n            return typeof value === 'number' && !isNaN(value);\n        }\n        function styleValue(value) {\n            if (isNumber(value)) {\n                return value + 'px';\n            }\n            return value;\n        }\n        var SIZE_STYLES_REGEX = /width|height|top|left|bottom|right/i;\n        function isSizeField(field) {\n            return SIZE_STYLES_REGEX.test(field);\n        }\n        function elementStyles(element, styles) {\n            var stylesArray = isString(styles) ? [styles] : styles;\n            if (isArray(stylesArray)) {\n                var result = {};\n                var style = window.getComputedStyle(element);\n                for (var idx = 0; idx < stylesArray.length; idx++) {\n                    var field = stylesArray[idx];\n                    result[field] = isSizeField(field) ? parseFloat(style[field]) : style[field];\n                }\n                return result;\n            } else if (isObject(styles)) {\n                for (var field$1 in styles) {\n                    element.style[field$1] = styleValue(styles[field$1]);\n                }\n            }\n        }\n        function getSpacing(value, defaultSpacing) {\n            if (defaultSpacing === void 0) {\n                defaultSpacing = 0;\n            }\n            var spacing = {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            };\n            if (typeof value === 'number') {\n                spacing[TOP] = spacing[RIGHT] = spacing[BOTTOM] = spacing[LEFT] = value;\n            } else {\n                spacing[TOP] = value[TOP] || defaultSpacing;\n                spacing[RIGHT] = value[RIGHT] || defaultSpacing;\n                spacing[BOTTOM] = value[BOTTOM] || defaultSpacing;\n                spacing[LEFT] = value[LEFT] || defaultSpacing;\n            }\n            return spacing;\n        }\n        function grep(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                if (callback(array[idx])) {\n                    result.push(array[idx]);\n                }\n            }\n            return result;\n        }\n        function hasClasses(element, classNames) {\n            if (element.className) {\n                var names = classNames.split(' ');\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (element.className.indexOf(names[idx]) !== -1) {\n                        return true;\n                    }\n                }\n            }\n        }\n        function inArray(value, array) {\n            if (array) {\n                return array.indexOf(value) !== -1;\n            }\n        }\n        function interpolateValue(start, end, progress) {\n            return kendo.drawing.util.round(start + (end - start) * progress, COORD_PRECISION);\n        }\n        var InstanceObserver = Class.extend({\n            init: function (observer, handlers) {\n                this.observer = observer;\n                this.handlerMap = deepExtend({}, this.handlerMap, handlers);\n            },\n            trigger: function (name, args) {\n                var ref = this;\n                var observer = ref.observer;\n                var handlerMap = ref.handlerMap;\n                var isDefaultPrevented;\n                if (handlerMap[name]) {\n                    isDefaultPrevented = observer[handlerMap[name]](args);\n                } else if (observer.trigger) {\n                    isDefaultPrevented = observer.trigger(name, args);\n                }\n                return isDefaultPrevented;\n            },\n            requiresHandlers: function (names) {\n                var this$1 = this;\n                if (this.observer.requiresHandlers) {\n                    return this.observer.requiresHandlers(names);\n                }\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (this$1.handlerMap[names[idx]]) {\n                        return true;\n                    }\n                }\n            }\n        });\n        function isFunction(fn) {\n            return typeof fn === 'function';\n        }\n        function map(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                var value = callback(array[idx]);\n                if (kendo.drawing.util.defined(value)) {\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n        function mousewheelDelta(e) {\n            var delta = 0;\n            if (e.wheelDelta) {\n                delta = -e.wheelDelta / 120;\n                delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n            }\n            if (e.detail) {\n                delta = kendo.drawing.util.round(e.detail / 3);\n            }\n            return delta;\n        }\n        var ref = kendo.drawing.util;\n        var append = ref.append;\n        var bindEvents = ref.bindEvents;\n        var defined = ref.defined;\n        var deg = ref.deg;\n        var elementOffset = ref.elementOffset;\n        var elementSize = ref.elementSize;\n        var eventElement = ref.eventElement;\n        var eventCoordinates = ref.eventCoordinates;\n        var last = ref.last;\n        var limitValue = ref.limitValue;\n        var objectKey = ref.objectKey;\n        var rad = ref.rad;\n        var round = ref.round;\n        var unbindEvents = ref.unbindEvents;\n        var valueOrDefault = ref.valueOrDefault;\n        var FontLoader = Class.extend({});\n        FontLoader.fetchFonts = function (options, fonts, state) {\n            if (state === void 0) {\n                state = { depth: 0 };\n            }\n            var MAX_DEPTH = 5;\n            if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n                return;\n            }\n            Object.keys(options).forEach(function (key) {\n                var value = options[key];\n                if (key === 'dataSource' || key[0] === '$' || !value) {\n                    return;\n                }\n                if (key === 'font') {\n                    fonts.push(value);\n                } else if (typeof value === 'object') {\n                    state.depth++;\n                    FontLoader.fetchFonts(value, fonts, state);\n                    state.depth--;\n                }\n            });\n        };\n        FontLoader.loadFonts = function (fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        };\n        FontLoader.preloadFonts = function (options, callback) {\n            var fonts = [];\n            FontLoader.fetchFonts(options, fonts);\n            FontLoader.loadFonts(fonts, callback);\n        };\n        function setDefaultOptions(type, options) {\n            var proto = type.prototype;\n            if (proto.options) {\n                proto.options = deepExtend({}, proto.options, options);\n            } else {\n                proto.options = options;\n            }\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_VALUE;\n            var max = MIN_VALUE;\n            for (var idx = 0, length = arr.length; idx < length; idx++) {\n                var value = arr[idx];\n                if (value !== null && isFinite(value)) {\n                    min = Math.min(min, value);\n                    max = Math.max(max, value);\n                }\n            }\n            return {\n                min: min === MAX_VALUE ? undefined : min,\n                max: max === MIN_VALUE ? undefined : max\n            };\n        }\n        var Point = Class.extend({\n            init: function (x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n            },\n            clone: function () {\n                return new Point(this.x, this.y);\n            },\n            equals: function (point) {\n                return point && this.x === point.x && this.y === point.y;\n            },\n            rotate: function (center, degrees) {\n                var theta = rad(degrees);\n                var cosT = Math.cos(theta);\n                var sinT = Math.sin(theta);\n                var cx = center.x;\n                var cy = center.y;\n                var ref = this;\n                var x = ref.x;\n                var y = ref.y;\n                this.x = round(cx + (x - cx) * cosT + (y - cy) * sinT, COORD_PRECISION);\n                this.y = round(cy + (y - cy) * cosT - (x - cx) * sinT, COORD_PRECISION);\n                return this;\n            },\n            multiply: function (a) {\n                this.x *= a;\n                this.y *= a;\n                return this;\n            },\n            distanceTo: function (point) {\n                var dx = this.x - point.x;\n                var dy = this.y - point.y;\n                return Math.sqrt(dx * dx + dy * dy);\n            }\n        });\n        Point.onCircle = function (center, angle, radius) {\n            var radians = rad(angle);\n            return new Point(center.x - radius * Math.cos(radians), center.y - radius * Math.sin(radians));\n        };\n        var Box = Class.extend({\n            init: function (x1, y1, x2, y2) {\n                this.x1 = x1 || 0;\n                this.y1 = y1 || 0;\n                this.x2 = x2 || 0;\n                this.y2 = y2 || 0;\n            },\n            width: function () {\n                return this.x2 - this.x1;\n            },\n            height: function () {\n                return this.y2 - this.y1;\n            },\n            translate: function (dx, dy) {\n                this.x1 += dx;\n                this.x2 += dx;\n                this.y1 += dy;\n                this.y2 += dy;\n                return this;\n            },\n            move: function (x, y) {\n                var height = this.height();\n                var width = this.width();\n                if (defined(x)) {\n                    this.x1 = x;\n                    this.x2 = this.x1 + width;\n                }\n                if (defined(y)) {\n                    this.y1 = y;\n                    this.y2 = this.y1 + height;\n                }\n                return this;\n            },\n            wrap: function (targetBox) {\n                this.x1 = Math.min(this.x1, targetBox.x1);\n                this.y1 = Math.min(this.y1, targetBox.y1);\n                this.x2 = Math.max(this.x2, targetBox.x2);\n                this.y2 = Math.max(this.y2, targetBox.y2);\n                return this;\n            },\n            wrapPoint: function (point) {\n                var arrayPoint = isArray(point);\n                var x = arrayPoint ? point[0] : point.x;\n                var y = arrayPoint ? point[1] : point.y;\n                this.wrap(new Box(x, y, x, y));\n                return this;\n            },\n            snapTo: function (targetBox, axis) {\n                if (axis === X || !axis) {\n                    this.x1 = targetBox.x1;\n                    this.x2 = targetBox.x2;\n                }\n                if (axis === Y || !axis) {\n                    this.y1 = targetBox.y1;\n                    this.y2 = targetBox.y2;\n                }\n                return this;\n            },\n            alignTo: function (targetBox, anchor) {\n                var height = this.height();\n                var width = this.width();\n                var axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n                var offset = axis === Y ? height : width;\n                if (anchor === CENTER) {\n                    var targetCenter = targetBox.center();\n                    var center = this.center();\n                    this.x1 += targetCenter.x - center.x;\n                    this.y1 += targetCenter.y - center.y;\n                } else if (anchor === TOP || anchor === LEFT) {\n                    this[axis + 1] = targetBox[axis + 1] - offset;\n                } else {\n                    this[axis + 1] = targetBox[axis + 2];\n                }\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            shrink: function (dw, dh) {\n                this.x2 -= dw;\n                this.y2 -= dh;\n                return this;\n            },\n            expand: function (dw, dh) {\n                this.shrink(-dw, -dh);\n                return this;\n            },\n            pad: function (padding) {\n                var spacing = getSpacing(padding);\n                this.x1 -= spacing.left;\n                this.x2 += spacing.right;\n                this.y1 -= spacing.top;\n                this.y2 += spacing.bottom;\n                return this;\n            },\n            unpad: function (padding) {\n                var spacing = getSpacing(padding);\n                spacing.left = -spacing.left;\n                spacing.top = -spacing.top;\n                spacing.right = -spacing.right;\n                spacing.bottom = -spacing.bottom;\n                return this.pad(spacing);\n            },\n            clone: function () {\n                return new Box(this.x1, this.y1, this.x2, this.y2);\n            },\n            center: function () {\n                return new Point(this.x1 + this.width() / 2, this.y1 + this.height() / 2);\n            },\n            containsPoint: function (point) {\n                return point.x >= this.x1 && point.x <= this.x2 && point.y >= this.y1 && point.y <= this.y2;\n            },\n            points: function () {\n                return [\n                    new Point(this.x1, this.y1),\n                    new Point(this.x2, this.y1),\n                    new Point(this.x2, this.y2),\n                    new Point(this.x1, this.y2)\n                ];\n            },\n            getHash: function () {\n                return [\n                    this.x1,\n                    this.y1,\n                    this.x2,\n                    this.y2\n                ].join(',');\n            },\n            overlaps: function (box) {\n                return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n            },\n            rotate: function (rotation) {\n                var width = this.width();\n                var height = this.height();\n                var ref = this.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var r1 = rotatePoint(0, 0, cx, cy, rotation);\n                var r2 = rotatePoint(width, 0, cx, cy, rotation);\n                var r3 = rotatePoint(width, height, cx, cy, rotation);\n                var r4 = rotatePoint(0, height, cx, cy, rotation);\n                width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n                height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            toRect: function () {\n                return new Rect([\n                    this.x1,\n                    this.y1\n                ], [\n                    this.width(),\n                    this.height()\n                ]);\n            },\n            hasSize: function () {\n                return this.width() !== 0 && this.height() !== 0;\n            },\n            align: function (targetBox, axis, alignment) {\n                var c1 = axis + 1;\n                var c2 = axis + 2;\n                var sizeFunc = axis === X ? WIDTH : HEIGHT;\n                var size = this[sizeFunc]();\n                if (inArray(alignment, [\n                        LEFT,\n                        TOP\n                    ])) {\n                    this[c1] = targetBox[c1];\n                    this[c2] = this[c1] + size;\n                } else if (inArray(alignment, [\n                        RIGHT,\n                        BOTTOM\n                    ])) {\n                    this[c2] = targetBox[c2];\n                    this[c1] = this[c2] - size;\n                } else if (alignment === CENTER) {\n                    this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n                    this[c2] = this[c1] + size;\n                }\n            }\n        });\n        function rotatePoint(x, y, cx, cy, angle) {\n            var theta = rad(angle);\n            return new Point(cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta), cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta));\n        }\n        var Ring = Class.extend({\n            init: function (center, innerRadius, radius, startAngle, angle) {\n                this.center = center;\n                this.innerRadius = innerRadius;\n                this.radius = radius;\n                this.startAngle = startAngle;\n                this.angle = angle;\n            },\n            clone: function () {\n                return new Ring(this.center, this.innerRadius, this.radius, this.startAngle, this.angle);\n            },\n            middle: function () {\n                return this.startAngle + this.angle / 2;\n            },\n            setRadius: function (newRadius, innerRadius) {\n                if (innerRadius) {\n                    this.innerRadius = newRadius;\n                } else {\n                    this.radius = newRadius;\n                }\n                return this;\n            },\n            point: function (angle, innerRadius) {\n                var radianAngle = rad(angle);\n                var ax = Math.cos(radianAngle);\n                var ay = Math.sin(radianAngle);\n                var radius = innerRadius ? this.innerRadius : this.radius;\n                var x = round(this.center.x - ax * radius, COORD_PRECISION);\n                var y = round(this.center.y - ay * radius, COORD_PRECISION);\n                return new Point(x, y);\n            },\n            adjacentBox: function (distance, width, height) {\n                var sector = this.clone().expand(distance);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                var hw = width / 2;\n                var hh = height / 2;\n                var sa = Math.sin(rad(midAndle));\n                var ca = Math.cos(rad(midAndle));\n                var x = midPoint.x - hw;\n                var y = midPoint.y - hh;\n                if (Math.abs(sa) < 0.9) {\n                    x += hw * -ca / Math.abs(ca);\n                }\n                if (Math.abs(ca) < 0.9) {\n                    y += hh * -sa / Math.abs(sa);\n                }\n                return new Box(x, y, x + width, y + height);\n            },\n            containsPoint: function (p) {\n                var center = this.center;\n                var innerRadius = this.innerRadius;\n                var radius = this.radius;\n                var startAngle = this.startAngle;\n                var endAngle = this.startAngle + this.angle;\n                var dx = p.x - center.x;\n                var dy = p.y - center.y;\n                var vector = new Point(dx, dy);\n                var startPoint = this.point(startAngle);\n                var startVector = new Point(startPoint.x - center.x, startPoint.y - center.y);\n                var endPoint = this.point(endAngle);\n                var endVector = new Point(endPoint.x - center.x, endPoint.y - center.y);\n                var dist = round(dx * dx + dy * dy, COORD_PRECISION);\n                return (startVector.equals(vector) || clockwise(startVector, vector)) && !clockwise(endVector, vector) && dist >= innerRadius * innerRadius && dist <= radius * radius;\n            },\n            getBBox: function () {\n                var this$1 = this;\n                var box = new Box(MAX_VALUE, MAX_VALUE, MIN_VALUE, MIN_VALUE);\n                var startAngle = round(this.startAngle % 360);\n                var endAngle = round((startAngle + this.angle) % 360);\n                var innerRadius = this.innerRadius;\n                var allAngles = [\n                    0,\n                    90,\n                    180,\n                    270,\n                    startAngle,\n                    endAngle\n                ].sort(numericComparer);\n                var startAngleIndex = allAngles.indexOf(startAngle);\n                var endAngleIndex = allAngles.indexOf(endAngle);\n                var angles;\n                if (startAngle === endAngle) {\n                    angles = allAngles;\n                } else {\n                    if (startAngleIndex < endAngleIndex) {\n                        angles = allAngles.slice(startAngleIndex, endAngleIndex + 1);\n                    } else {\n                        angles = [].concat(allAngles.slice(0, endAngleIndex + 1), allAngles.slice(startAngleIndex, allAngles.length));\n                    }\n                }\n                for (var i = 0; i < angles.length; i++) {\n                    var point = this$1.point(angles[i]);\n                    box.wrapPoint(point);\n                    box.wrapPoint(point, innerRadius);\n                }\n                if (!innerRadius) {\n                    box.wrapPoint(this.center);\n                }\n                return box;\n            },\n            expand: function (value) {\n                this.radius += value;\n                return this;\n            }\n        });\n        function numericComparer(a, b) {\n            return a - b;\n        }\n        var Sector = Ring.extend({\n            init: function (center, radius, startAngle, angle) {\n                Ring.fn.init.call(this, center, 0, radius, startAngle, angle);\n            },\n            expand: function (value) {\n                return Ring.fn.expand.call(this, value);\n            },\n            clone: function () {\n                return new Sector(this.center, this.radius, this.startAngle, this.angle);\n            },\n            setRadius: function (newRadius) {\n                this.radius = newRadius;\n                return this;\n            }\n        });\n        var ShapeBuilder = Class.extend({\n            createRing: function (sector, options) {\n                var startAngle = sector.startAngle + 180;\n                var endAngle = sector.angle + startAngle;\n                var center = new geometry.Point(sector.center.x, sector.center.y);\n                var radius = Math.max(sector.radius, 0);\n                var innerRadius = Math.max(sector.innerRadius, 0);\n                var arc = new geometry.Arc(center, {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: radius,\n                    radiusY: radius\n                });\n                var path = Path.fromArc(arc, options).close();\n                if (innerRadius) {\n                    arc.radiusX = arc.radiusY = innerRadius;\n                    var innerEnd = arc.pointAt(endAngle);\n                    path.lineTo(innerEnd.x, innerEnd.y);\n                    path.arc(endAngle, startAngle, innerRadius, innerRadius, true);\n                } else {\n                    path.lineTo(center.x, center.y);\n                }\n                return path;\n            }\n        });\n        ShapeBuilder.current = new ShapeBuilder();\n        var ChartElement = Class.extend({\n            init: function (options) {\n                this.children = [];\n                this.options = deepExtend({}, this.options, options);\n            },\n            reflow: function (targetBox) {\n                var children = this.children;\n                var box;\n                for (var i = 0; i < children.length; i++) {\n                    var currentChild = children[i];\n                    currentChild.reflow(targetBox);\n                    box = box ? box.wrap(currentChild.box) : currentChild.box.clone();\n                }\n                this.box = box || targetBox;\n            },\n            destroy: function () {\n                var children = this.children;\n                if (this.animation) {\n                    this.animation.destroy();\n                }\n                for (var i = 0; i < children.length; i++) {\n                    children[i].destroy();\n                }\n            },\n            getRoot: function () {\n                var parent = this.parent;\n                return parent ? parent.getRoot() : null;\n            },\n            getSender: function () {\n                var service = this.getService();\n                if (service) {\n                    return service.sender;\n                }\n            },\n            getService: function () {\n                var element = this;\n                while (element) {\n                    if (element.chartService) {\n                        return element.chartService;\n                    }\n                    element = element.parent;\n                }\n            },\n            translateChildren: function (dx, dy) {\n                var children = this.children;\n                var childrenCount = children.length;\n                for (var i = 0; i < childrenCount; i++) {\n                    children[i].box.translate(dx, dy);\n                }\n            },\n            append: function () {\n                var arguments$1 = arguments;\n                var this$1 = this;\n                for (var i = 0; i < arguments.length; i++) {\n                    var item = arguments$1[i];\n                    this$1.children.push(item);\n                    item.parent = this$1;\n                }\n            },\n            renderVisual: function () {\n                if (this.options.visible === false) {\n                    return;\n                }\n                this.createVisual();\n                this.addVisual();\n                this.renderChildren();\n                this.createAnimation();\n                this.renderComplete();\n            },\n            addVisual: function () {\n                if (this.visual) {\n                    this.visual.chartElement = this;\n                    if (this.parent) {\n                        this.parent.appendVisual(this.visual);\n                    }\n                }\n            },\n            renderChildren: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    children[i].renderVisual();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group({\n                    zIndex: this.options.zIndex,\n                    visible: valueOrDefault(this.options.visible, true)\n                });\n            },\n            createAnimation: function () {\n                if (this.visual) {\n                    this.animation = drawing.Animation.create(this.visual, this.options.animation);\n                }\n            },\n            appendVisual: function (childVisual) {\n                if (!childVisual.chartElement) {\n                    childVisual.chartElement = this;\n                }\n                if (childVisual.options.noclip) {\n                    this.clipRoot().visual.append(childVisual);\n                } else if (defined(childVisual.options.zIndex)) {\n                    this.stackRoot().stackVisual(childVisual);\n                } else if (this.isStackRoot) {\n                    this.stackVisual(childVisual);\n                } else if (this.visual) {\n                    this.visual.append(childVisual);\n                } else {\n                    this.parent.appendVisual(childVisual);\n                }\n            },\n            clipRoot: function () {\n                if (this.parent) {\n                    return this.parent.clipRoot();\n                }\n                return this;\n            },\n            stackRoot: function () {\n                if (this.parent) {\n                    return this.parent.stackRoot();\n                }\n                return this;\n            },\n            stackVisual: function (childVisual) {\n                var zIndex = childVisual.options.zIndex || 0;\n                var visuals = this.visual.children;\n                var length = visuals.length;\n                var pos;\n                for (pos = 0; pos < length; pos++) {\n                    var sibling = visuals[pos];\n                    var here = valueOrDefault(sibling.options.zIndex, 0);\n                    if (here > zIndex) {\n                        break;\n                    }\n                }\n                this.visual.insert(pos, childVisual);\n            },\n            traverse: function (callback) {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    var child = children[i];\n                    callback(child);\n                    if (child.traverse) {\n                        child.traverse(callback);\n                    }\n                }\n            },\n            closest: function (match) {\n                var element = this;\n                var matched = false;\n                while (element && !matched) {\n                    matched = match(element);\n                    if (!matched) {\n                        element = element.parent;\n                    }\n                }\n                if (matched) {\n                    return element;\n                }\n            },\n            renderComplete: function () {\n            },\n            hasHighlight: function () {\n                var options = (this.options || {}).highlight;\n                return !(!this.createHighlight || options && options.visible === false);\n            },\n            toggleHighlight: function (show) {\n                var this$1 = this;\n                var options = (this.options || {}).highlight;\n                var customVisual = (options || {}).visual;\n                var highlight = this._highlight;\n                if (!highlight) {\n                    var highlightOptions = {\n                        fill: {\n                            color: WHITE,\n                            opacity: 0.2\n                        },\n                        stroke: {\n                            color: WHITE,\n                            width: 1,\n                            opacity: 0.2\n                        }\n                    };\n                    if (customVisual) {\n                        highlight = this._highlight = customVisual($.extend(this.highlightVisualArgs(), {\n                            createVisual: function () {\n                                return this$1.createHighlight(highlightOptions);\n                            },\n                            sender: this.getSender(),\n                            series: this.series,\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            runningTotal: this.runningTotal,\n                            total: this.total\n                        }));\n                        if (!highlight) {\n                            return;\n                        }\n                    } else {\n                        highlight = this._highlight = this.createHighlight(highlightOptions);\n                    }\n                    highlight.options.zIndex = this.options.zIndex;\n                    this.appendVisual(highlight);\n                }\n                highlight.visible(show);\n            },\n            createGradientOverlay: function (element, options, gradientOptions) {\n                var overlay = new Path($.extend({\n                    stroke: { color: 'none' },\n                    fill: this.createGradient(gradientOptions),\n                    closed: element.options.closed\n                }, options));\n                overlay.segments.elements(element.segments.elements());\n                return overlay;\n            },\n            createGradient: function (options) {\n                if (this.parent) {\n                    return this.parent.createGradient(options);\n                }\n            }\n        });\n        ChartElement.prototype.options = {};\n        var BoxElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.options.margin = getSpacing(this.options.margin);\n                this.options.padding = getSpacing(this.options.padding);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var shrinkToFit = options.shrinkToFit;\n                var hasSetSize = width && height;\n                var margin = options.margin;\n                var padding = options.padding;\n                var borderWidth = options.border.width;\n                var box;\n                var reflowPaddingBox = function () {\n                    this$1.align(targetBox, X, options.align);\n                    this$1.align(targetBox, Y, options.vAlign);\n                    this$1.paddingBox = box.clone().unpad(margin).unpad(borderWidth);\n                };\n                var contentBox = targetBox.clone();\n                if (hasSetSize) {\n                    contentBox.x2 = contentBox.x1 + width;\n                    contentBox.y2 = contentBox.y1 + height;\n                }\n                if (shrinkToFit) {\n                    contentBox.unpad(margin).unpad(borderWidth).unpad(padding);\n                }\n                ChartElement.fn.reflow.call(this, contentBox);\n                if (hasSetSize) {\n                    box = this.box = new Box(0, 0, width, height);\n                } else {\n                    box = this.box;\n                }\n                if (shrinkToFit && hasSetSize) {\n                    reflowPaddingBox();\n                    contentBox = this.contentBox = this.paddingBox.clone().unpad(padding);\n                } else {\n                    contentBox = this.contentBox = box.clone();\n                    box.pad(padding).pad(borderWidth).pad(margin);\n                    reflowPaddingBox();\n                }\n                this.translateChildren(box.x1 - contentBox.x1 + margin.left + borderWidth + padding.left, box.y1 - contentBox.y1 + margin.top + borderWidth + padding.top);\n                var children = this.children;\n                for (var i = 0; i < children.length; i++) {\n                    var item = children[i];\n                    item.reflow(item.box);\n                }\n            },\n            align: function (targetBox, axis, alignment) {\n                this.box.align(targetBox, axis, alignment);\n            },\n            hasBox: function () {\n                var options = this.options;\n                return options.border.width || options.background;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                if (options.visible && this.hasBox()) {\n                    this.visual.append(Path.fromRect(this.paddingBox.toRect(), this.visualStyle()));\n                }\n            },\n            visualStyle: function () {\n                var options = this.options;\n                var border = options.border || {};\n                return {\n                    stroke: {\n                        width: border.width,\n                        color: border.color,\n                        opacity: valueOrDefault(border.opacity, options.opacity),\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    cursor: options.cursor\n                };\n            }\n        });\n        setDefaultOptions(BoxElement, {\n            align: LEFT,\n            vAlign: TOP,\n            margin: {},\n            padding: {},\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            background: '',\n            shrinkToFit: false,\n            width: 0,\n            height: 0,\n            visible: true\n        });\n        var ShapeElement = BoxElement.extend({\n            init: function (options, pointData) {\n                BoxElement.fn.init.call(this, options);\n                this.pointData = pointData;\n            },\n            getElement: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.paddingBox;\n                var type = options.type;\n                var rotation = options.rotation;\n                var center = box.center();\n                var halfWidth = box.width() / 2;\n                if (!options.visible || !this.hasBox()) {\n                    return null;\n                }\n                var style = this.visualStyle();\n                var element;\n                if (type === CIRCLE) {\n                    element = new drawing.Circle(new Circle([\n                        round(box.x1 + halfWidth, COORD_PRECISION),\n                        round(box.y1 + box.height() / 2, COORD_PRECISION)\n                    ], halfWidth), style);\n                } else if (type === TRIANGLE) {\n                    element = Path.fromPoints([\n                        [\n                            box.x1 + halfWidth,\n                            box.y1\n                        ],\n                        [\n                            box.x1,\n                            box.y2\n                        ],\n                        [\n                            box.x2,\n                            box.y2\n                        ]\n                    ], style).close();\n                } else if (type === CROSS) {\n                    element = new drawing.MultiPath(style);\n                    element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n                    element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n                } else {\n                    element = Path.fromRect(box.toRect(), style);\n                }\n                if (rotation) {\n                    element.transform(geometryTransform().rotate(-rotation, [\n                        center.x,\n                        center.y\n                    ]));\n                }\n                element.options.zIndex = options.zIndex;\n                return element;\n            },\n            createElement: function () {\n                var this$1 = this;\n                var customVisual = this.options.visual;\n                var pointData = this.pointData || {};\n                var visual;\n                if (customVisual) {\n                    visual = customVisual({\n                        value: pointData.value,\n                        dataItem: pointData.dataItem,\n                        sender: this.getSender(),\n                        series: pointData.series,\n                        category: pointData.category,\n                        rect: this.paddingBox.toRect(),\n                        options: this.visualOptions(),\n                        createVisual: function () {\n                            return this$1.getElement();\n                        }\n                    });\n                } else {\n                    visual = this.getElement();\n                }\n                return visual;\n            },\n            visualOptions: function () {\n                var options = this.options;\n                return {\n                    background: options.background,\n                    border: options.border,\n                    margin: options.margin,\n                    padding: options.padding,\n                    type: options.type,\n                    size: options.width,\n                    visible: options.visible\n                };\n            },\n            createVisual: function () {\n                this.visual = this.createElement();\n            }\n        });\n        setDefaultOptions(ShapeElement, {\n            type: CIRCLE,\n            align: CENTER,\n            vAlign: CENTER\n        });\n        var LINEAR = 'linear';\n        var RADIAL = 'radial';\n        var GRADIENTS = {\n            glass: {\n                type: LINEAR,\n                rotation: 0,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.25,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 1,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.55\n                    },\n                    {\n                        offset: 0.65,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0.25\n                    }\n                ]\n            },\n            roundedBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0.33,\n                        color: WHITE,\n                        opacity: 0.06\n                    },\n                    {\n                        offset: 0.83,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            roundedGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.5,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.15,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.17,\n                        color: WHITE,\n                        opacity: 0.35\n                    },\n                    {\n                        offset: 0.85,\n                        color: WHITE,\n                        opacity: 0.05\n                    },\n                    {\n                        offset: 0.87,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            bubbleShadow: {\n                type: RADIAL,\n                center: [\n                    0.5,\n                    0.5\n                ],\n                radius: 0.5\n            }\n        };\n        function boxDiff(r, s) {\n            if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n                return s;\n            }\n            var a = Math.min(r.x1, s.x1);\n            var b = Math.max(r.x1, s.x1);\n            var c = Math.min(r.x2, s.x2);\n            var d = Math.max(r.x2, s.x2);\n            var e = Math.min(r.y1, s.y1);\n            var f = Math.max(r.y1, s.y1);\n            var g = Math.min(r.y2, s.y2);\n            var h = Math.max(r.y2, s.y2);\n            var boxes = [];\n            boxes[0] = new Box(b, e, c, f);\n            boxes[1] = new Box(a, f, b, g);\n            boxes[2] = new Box(c, f, d, g);\n            boxes[3] = new Box(b, g, c, h);\n            if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) {\n                boxes[4] = new Box(a, e, b, f);\n                boxes[5] = new Box(c, g, d, h);\n            } else {\n                boxes[4] = new Box(c, e, d, f);\n                boxes[5] = new Box(a, g, b, h);\n            }\n            return grep(boxes, function (box) {\n                return box.height() > 0 && box.width() > 0;\n            })[0];\n        }\n        var RootElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                var rootOptions = this.options;\n                rootOptions.width = parseInt(rootOptions.width, 10);\n                rootOptions.height = parseInt(rootOptions.height, 10);\n                this.gradients = {};\n            },\n            reflow: function () {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var currentBox = new Box(0, 0, options.width, options.height);\n                this.box = currentBox.unpad(options.margin);\n                for (var i = 0; i < children.length; i++) {\n                    children[i].reflow(currentBox);\n                    currentBox = boxDiff(currentBox, children[i].box) || new Box();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group();\n                this.createBackground();\n            },\n            createBackground: function () {\n                var options = this.options;\n                var border = options.border || {};\n                var box = this.box.clone().pad(options.margin).unpad(border.width);\n                var background = Path.fromRect(box.toRect(), {\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    zIndex: -10\n                });\n                this.visual.append(background);\n            },\n            getRoot: function () {\n                return this;\n            },\n            createGradient: function (options) {\n                var gradients = this.gradients;\n                var hashCode = objectKey(options);\n                var gradient = GRADIENTS[options.gradient];\n                var drawingGradient;\n                if (gradients[hashCode]) {\n                    drawingGradient = gradients[hashCode];\n                } else {\n                    var gradientOptions = $.extend({}, gradient, options);\n                    if (gradient.type === 'linear') {\n                        drawingGradient = new drawing.LinearGradient(gradientOptions);\n                    } else {\n                        if (options.innerRadius) {\n                            gradientOptions.stops = innerRadialStops(gradientOptions);\n                        }\n                        drawingGradient = new drawing.RadialGradient(gradientOptions);\n                        drawingGradient.supportVML = gradient.supportVML !== false;\n                    }\n                    gradients[hashCode] = drawingGradient;\n                }\n                return drawingGradient;\n            }\n        });\n        setDefaultOptions(RootElement, {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT,\n            background: WHITE,\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            margin: getSpacing(5),\n            zIndex: -2\n        });\n        function innerRadialStops(options) {\n            var stops = options.stops;\n            var usedSpace = options.innerRadius / options.radius * 100;\n            var length = stops.length;\n            var currentStops = [];\n            for (var i = 0; i < length; i++) {\n                var currentStop = $.extend({}, stops[i]);\n                currentStop.offset = (currentStop.offset * (100 - usedSpace) + usedSpace) / 100;\n                currentStops.push(currentStop);\n            }\n            return currentStops;\n        }\n        var FloatElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this._initDirection();\n            },\n            _initDirection: function () {\n                var options = this.options;\n                if (options.vertical) {\n                    this.groupAxis = X;\n                    this.elementAxis = Y;\n                    this.groupSizeField = WIDTH;\n                    this.elementSizeField = HEIGHT;\n                    this.groupSpacing = options.spacing;\n                    this.elementSpacing = options.vSpacing;\n                } else {\n                    this.groupAxis = Y;\n                    this.elementAxis = X;\n                    this.groupSizeField = HEIGHT;\n                    this.elementSizeField = WIDTH;\n                    this.groupSpacing = options.vSpacing;\n                    this.elementSpacing = options.spacing;\n                }\n            },\n            reflow: function (targetBox) {\n                this.box = targetBox.clone();\n                this.reflowChildren();\n            },\n            reflowChildren: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var elementAxis = ref.elementAxis;\n                var groupAxis = ref.groupAxis;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var ref$1 = this.groupOptions();\n                var groups = ref$1.groups;\n                var groupsSize = ref$1.groupsSize;\n                var maxGroupElementsSize = ref$1.maxGroupElementsSize;\n                var groupsCount = groups.length;\n                var groupsStart = box[groupAxis + 1] + this.alignStart(groupsSize, box[groupSizeField]());\n                if (groupsCount) {\n                    var groupStart = groupsStart;\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        var group = groups[groupIdx];\n                        var groupElements = group.groupElements;\n                        var elementStart = box[elementAxis + 1];\n                        var groupElementsCount = groupElements.length;\n                        for (var idx = 0; idx < groupElementsCount; idx++) {\n                            var element = groupElements[idx];\n                            var elementSize$$1 = this$1.elementSize(element);\n                            var groupElementStart = groupStart + this$1.alignStart(elementSize$$1[groupSizeField], group.groupSize);\n                            var elementBox = new Box();\n                            elementBox[groupAxis + 1] = groupElementStart;\n                            elementBox[groupAxis + 2] = groupElementStart + elementSize$$1[groupSizeField];\n                            elementBox[elementAxis + 1] = elementStart;\n                            elementBox[elementAxis + 2] = elementStart + elementSize$$1[elementSizeField];\n                            element.reflow(elementBox);\n                            elementStart += elementSize$$1[elementSizeField] + this$1.elementSpacing;\n                        }\n                        groupStart += group.groupSize + this$1.groupSpacing;\n                    }\n                    box[groupAxis + 1] = groupsStart;\n                    box[groupAxis + 2] = groupsStart + groupsSize;\n                    box[elementAxis + 2] = box[elementAxis + 1] + maxGroupElementsSize;\n                }\n            },\n            alignStart: function (size, maxSize) {\n                var start = 0;\n                var align = this.options.align;\n                if (align === RIGHT || align === BOTTOM) {\n                    start = maxSize - size;\n                } else if (align === CENTER) {\n                    start = (maxSize - size) / 2;\n                }\n                return start;\n            },\n            groupOptions: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var children = ref.children;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var elementSpacing = ref.elementSpacing;\n                var groupSpacing = ref.groupSpacing;\n                var maxSize = round(box[elementSizeField]());\n                var childrenCount = children.length;\n                var groups = [];\n                var groupSize = 0;\n                var groupElementsSize = 0;\n                var groupsSize = 0;\n                var maxGroupElementsSize = 0;\n                var groupElements = [];\n                for (var idx = 0; idx < childrenCount; idx++) {\n                    var element = children[idx];\n                    if (!element.box) {\n                        element.reflow(box);\n                    }\n                    var elementSize$$1 = this$1.elementSize(element);\n                    if (this$1.options.wrap && round(groupElementsSize + elementSpacing + elementSize$$1[elementSizeField]) > maxSize) {\n                        groups.push({\n                            groupElements: groupElements,\n                            groupSize: groupSize,\n                            groupElementsSize: groupElementsSize\n                        });\n                        maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                        groupsSize += groupSpacing + groupSize;\n                        groupSize = 0;\n                        groupElementsSize = 0;\n                        groupElements = [];\n                    }\n                    groupSize = Math.max(groupSize, elementSize$$1[groupSizeField]);\n                    if (groupElementsSize > 0) {\n                        groupElementsSize += elementSpacing;\n                    }\n                    groupElementsSize += elementSize$$1[elementSizeField];\n                    groupElements.push(element);\n                }\n                groups.push({\n                    groupElements: groupElements,\n                    groupSize: groupSize,\n                    groupElementsSize: groupElementsSize\n                });\n                maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                groupsSize += groupSize;\n                return {\n                    groups: groups,\n                    groupsSize: groupsSize,\n                    maxGroupElementsSize: maxGroupElementsSize\n                };\n            },\n            elementSize: function (element) {\n                return {\n                    width: element.box.width(),\n                    height: element.box.height()\n                };\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(FloatElement, {\n            vertical: true,\n            wrap: true,\n            vSpacing: 0,\n            spacing: 0\n        });\n        var DrawingText = drawing.Text;\n        var Text = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.content = content;\n                this.reflow(new Box());\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var size = options.size = util.measureText(this.content, { font: options.font });\n                this.baseline = size.baseline;\n                this.box = new Box(targetBox.x1, targetBox.y1, targetBox.x1 + size.width, targetBox.y1 + size.height);\n            },\n            createVisual: function () {\n                var ref = this.options;\n                var font = ref.font;\n                var color = ref.color;\n                var opacity = ref.opacity;\n                var cursor = ref.cursor;\n                this.visual = new DrawingText(this.content, this.box.toRect().topLeft(), {\n                    font: font,\n                    fill: {\n                        color: color,\n                        opacity: opacity\n                    },\n                    cursor: cursor\n                });\n            }\n        });\n        setDefaultOptions(Text, {\n            font: DEFAULT_FONT,\n            color: BLACK\n        });\n        function rectToBox(rect) {\n            var origin = rect.origin;\n            var bottomRight = rect.bottomRight();\n            return new Box(origin.x, origin.y, bottomRight.x, bottomRight.y);\n        }\n        var ROWS_SPLIT_REGEX = /\\n|\\\\n/m;\n        var TextBox = BoxElement.extend({\n            init: function (content, options) {\n                BoxElement.fn.init.call(this, options);\n                this.content = content;\n                this._initContainer();\n                if (this.options._autoReflow !== false) {\n                    this.reflow(new Box());\n                }\n            },\n            _initContainer: function () {\n                var options = this.options;\n                var rows = String(this.content).split(ROWS_SPLIT_REGEX);\n                var floatElement = new FloatElement({\n                    vertical: true,\n                    align: options.align,\n                    wrap: false\n                });\n                var textOptions = deepExtend({}, options, {\n                    opacity: 1,\n                    animation: null\n                });\n                this.container = floatElement;\n                this.append(floatElement);\n                for (var rowIdx = 0; rowIdx < rows.length; rowIdx++) {\n                    var text = new Text(rows[rowIdx].trim(), textOptions);\n                    floatElement.append(text);\n                }\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var visualFn = options.visual;\n                this.container.options.align = options.align;\n                if (visualFn && !this._boxReflow) {\n                    var visualBox = targetBox;\n                    if (!visualBox.hasSize()) {\n                        this._boxReflow = true;\n                        this.reflow(visualBox);\n                        this._boxReflow = false;\n                        visualBox = this.box;\n                    }\n                    var visual = this.visual = visualFn(this.visualContext(visualBox));\n                    if (visual) {\n                        visualBox = rectToBox(visual.clippedBBox() || new Rect());\n                        visual.options.zIndex = options.zIndex;\n                        visual.options.noclip = options.noclip;\n                    }\n                    this.box = this.contentBox = this.paddingBox = visualBox;\n                } else {\n                    BoxElement.fn.reflow.call(this, targetBox);\n                    if (options.rotation) {\n                        var margin = getSpacing(options.margin);\n                        var box = this.box.unpad(margin);\n                        this.targetBox = targetBox;\n                        this.normalBox = box.clone();\n                        box = this.rotate();\n                        box.translate(margin.left - margin.right, margin.top - margin.bottom);\n                        this.rotatedBox = box.clone();\n                        box.pad(margin);\n                    }\n                }\n            },\n            createVisual: function () {\n                var options = this.options;\n                if (!options.visible) {\n                    return;\n                }\n                this.visual = new Group({\n                    transform: this.rotationTransform(),\n                    zIndex: options.zIndex,\n                    noclip: options.noclip\n                });\n                if (this.hasBox()) {\n                    var box = Path.fromRect(this.paddingBox.toRect(), this.visualStyle());\n                    this.visual.append(box);\n                }\n            },\n            renderVisual: function () {\n                if (this.options.visual) {\n                    this.addVisual();\n                    this.createAnimation();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            visualOptions: function () {\n                var options = this.options;\n                return {\n                    background: options.background,\n                    border: options.border,\n                    color: options.color,\n                    font: options.font,\n                    margin: options.margin,\n                    padding: options.padding,\n                    visible: options.visible\n                };\n            },\n            visualContext: function (targetBox) {\n                var this$1 = this;\n                return {\n                    text: this.content,\n                    rect: targetBox.toRect(),\n                    sender: this.getSender(),\n                    options: this.visualOptions(),\n                    createVisual: function () {\n                        this$1._boxReflow = true;\n                        this$1.reflow(targetBox);\n                        this$1._boxReflow = false;\n                        return this$1.getDefaultVisual();\n                    }\n                };\n            },\n            getDefaultVisual: function () {\n                this.createVisual();\n                this.renderChildren();\n                var visual = this.visual;\n                delete this.visual;\n                return visual;\n            },\n            rotate: function () {\n                var options = this.options;\n                this.box.rotate(options.rotation);\n                this.align(this.targetBox, X, options.align);\n                this.align(this.targetBox, Y, options.vAlign);\n                return this.box;\n            },\n            rotationTransform: function () {\n                var rotation = this.options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                var ref = this.normalBox.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var boxCenter = this.rotatedBox.center();\n                return geometryTransform().translate(boxCenter.x - cx, boxCenter.y - cy).rotate(rotation, [\n                    cx,\n                    cy\n                ]);\n            }\n        });\n        var Title = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.append(new TextBox(this.options.text, $.extend({}, this.options, { vAlign: this.options.position })));\n            },\n            reflow: function (targetBox) {\n                ChartElement.fn.reflow.call(this, targetBox);\n                this.box.snapTo(targetBox, X);\n            }\n        });\n        Title.buildTitle = function (options, parent, defaultOptions) {\n            var titleOptions = options;\n            if (typeof options === 'string') {\n                titleOptions = { text: options };\n            }\n            titleOptions = $.extend({ visible: true }, defaultOptions, titleOptions);\n            var title;\n            if (titleOptions && titleOptions.visible && titleOptions.text) {\n                title = new Title(titleOptions);\n                parent.append(title);\n            }\n            return title;\n        };\n        setDefaultOptions(Title, {\n            color: BLACK,\n            position: TOP,\n            align: CENTER,\n            margin: getSpacing(5),\n            padding: getSpacing(5)\n        });\n        var AxisLabel = TextBox.extend({\n            init: function (value, text, index, dataItem, options) {\n                TextBox.fn.init.call(this, text, options);\n                this.text = text;\n                this.value = value;\n                this.index = index;\n                this.dataItem = dataItem;\n                this.reflow(new Box());\n            },\n            visualContext: function (targetBox) {\n                var context = TextBox.fn.visualContext.call(this, targetBox);\n                context.value = this.value;\n                context.dataItem = this.dataItem;\n                context.format = this.options.format;\n                context.culture = this.options.culture;\n                return context;\n            },\n            click: function (widget, e) {\n                widget.trigger(AXIS_LABEL_CLICK, {\n                    element: eventElement(e),\n                    value: this.value,\n                    text: this.text,\n                    index: this.index,\n                    dataItem: this.dataItem,\n                    axis: this.parent.options\n                });\n            },\n            rotate: function () {\n                if (this.options.alignRotation !== CENTER) {\n                    var box = this.normalBox.toRect();\n                    var transform = this.rotationTransform();\n                    this.box = rectToBox(box.bbox(transform.matrix()));\n                } else {\n                    TextBox.fn.rotate.call(this);\n                }\n                return this.box;\n            },\n            rotationTransform: function () {\n                var options = this.options;\n                var rotation = options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                if (options.alignRotation === CENTER) {\n                    return TextBox.fn.rotationTransform.call(this);\n                }\n                var rotationMatrix = geometryTransform().rotate(rotation).matrix();\n                var box = this.normalBox.toRect();\n                var rect = this.targetBox.toRect();\n                var rotationOrigin = options.rotationOrigin || TOP;\n                var alignAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? X : Y;\n                var distanceAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? Y : X;\n                var axisAnchor = rotationOrigin === TOP || rotationOrigin === LEFT ? rect.origin : rect.bottomRight();\n                var topLeft = box.topLeft().transformCopy(rotationMatrix);\n                var topRight = box.topRight().transformCopy(rotationMatrix);\n                var bottomRight = box.bottomRight().transformCopy(rotationMatrix);\n                var bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);\n                var rotatedBox = Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);\n                var translate = {};\n                translate[distanceAxis] = rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis];\n                var distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var alignStart, alignEnd;\n                if (round(distanceLeft, DEFAULT_PRECISION) === round(distanceRight, DEFAULT_PRECISION)) {\n                    alignStart = topLeft;\n                    alignEnd = topRight;\n                } else if (distanceRight < distanceLeft) {\n                    alignStart = topRight;\n                    alignEnd = bottomRight;\n                } else {\n                    alignStart = topLeft;\n                    alignEnd = bottomLeft;\n                }\n                var alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;\n                translate[alignAxis] = rect.center()[alignAxis] - alignCenter;\n                return geometryTransform().translate(translate.x, translate.y).rotate(rotation);\n            }\n        });\n        setDefaultOptions(AxisLabel, { _autoReflow: false });\n        var defaultImplementation = {\n            format: function (format, value) {\n                return value;\n            },\n            toString: function (value) {\n                return value;\n            },\n            parseDate: function (value) {\n                return new Date(value);\n            }\n        };\n        var current = defaultImplementation;\n        var IntlService = Class.extend({});\n        IntlService.register = function (userImplementation) {\n            current = userImplementation;\n        };\n        if (Object.defineProperties) {\n            Object.defineProperties(IntlService, {\n                implementation: {\n                    get: function () {\n                        return current;\n                    }\n                }\n            });\n        }\n        var FORMAT_REPLACE_REGEX = /\\{(\\d+)(:[^\\}]+)?\\}/g;\n        var FormatService = Class.extend({\n            init: function (intlService) {\n                this._intlService = intlService;\n            },\n            auto: function (formatString) {\n                var values = [], len = arguments.length - 1;\n                while (len-- > 0)\n                    values[len] = arguments[len + 1];\n                var intl = this.intlService;\n                if (formatString.match(FORMAT_REGEX)) {\n                    return intl.format.apply(intl, [formatString].concat(values));\n                }\n                return intl.toString(values[0], formatString);\n            },\n            localeAuto: function (formatString, values, locale) {\n                var intl = this.intlService;\n                var result;\n                if (formatString.match(FORMAT_REGEX)) {\n                    result = formatString.replace(FORMAT_REPLACE_REGEX, function (match, index, placeholderFormat) {\n                        var value = values[parseInt(index, 10)];\n                        return intl.toString(value, placeholderFormat ? placeholderFormat.substring(1) : '', locale);\n                    });\n                } else {\n                    result = intl.toString(values[0], formatString, locale);\n                }\n                return result;\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(FormatService.fn, {\n                intlService: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    }\n                }\n            });\n        }\n        var ChartService = Class.extend({\n            init: function (chart, context) {\n                if (context === void 0) {\n                    context = {};\n                }\n                this._intlService = context.intlService;\n                this.sender = context.sender || chart;\n                this.format = new FormatService(context.intlService);\n                this.chart = chart;\n            },\n            notify: function (name, args) {\n                this.chart.trigger(name, args);\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(ChartService.fn, {\n                intl: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    }\n                }\n            });\n        }\n        var current$1;\n        var DomEventsBuilder = Class.extend({});\n        DomEventsBuilder.register = function (userImplementation) {\n            current$1 = userImplementation;\n        };\n        DomEventsBuilder.create = function (element, events) {\n            if (current$1) {\n                return current$1.create(element, events);\n            }\n        };\n        var current$2 = {\n            compile: function (template) {\n                return template;\n            }\n        };\n        var TemplateService = Class.extend({});\n        TemplateService.register = function (userImplementation) {\n            current$2 = userImplementation;\n        };\n        TemplateService.compile = function (template) {\n            return current$2.compile(template);\n        };\n        var services = {\n            ChartService: ChartService,\n            DomEventsBuilder: DomEventsBuilder,\n            FormatService: FormatService,\n            IntlService: IntlService,\n            TemplateService: TemplateService\n        };\n        var DEFAULT_ICON_SIZE = 7;\n        var DEFAULT_LABEL_COLOR = '#fff';\n        var Note = BoxElement.extend({\n            init: function (fields, options, chartService) {\n                BoxElement.fn.init.call(this, options);\n                this.fields = fields;\n                this.chartService = chartService;\n                this.render();\n            },\n            hide: function () {\n                this.options.visible = false;\n            },\n            show: function () {\n                this.options.visible = true;\n            },\n            render: function () {\n                var options = this.options;\n                if (options.visible) {\n                    var label = options.label;\n                    var icon = options.icon;\n                    var box = new Box();\n                    var size = icon.size;\n                    var text = this.fields.text;\n                    var width, height;\n                    if (defined(label) && label.visible) {\n                        if (label.template) {\n                            var noteTemplate = TemplateService.compile(label.template);\n                            text = noteTemplate(this.fields);\n                        } else if (label.format) {\n                            text = this.chartService.format.auto(label.format, text);\n                        }\n                        if (!label.color) {\n                            label.color = label.position === INSIDE ? DEFAULT_LABEL_COLOR : icon.background;\n                        }\n                        this.label = new TextBox(text, deepExtend({}, label));\n                        if (label.position === INSIDE && !defined(size)) {\n                            if (icon.type === CIRCLE) {\n                                size = Math.max(this.label.box.width(), this.label.box.height());\n                            } else {\n                                width = this.label.box.width();\n                                height = this.label.box.height();\n                            }\n                            box.wrap(this.label.box);\n                        }\n                    }\n                    icon.width = width || size || DEFAULT_ICON_SIZE;\n                    icon.height = height || size || DEFAULT_ICON_SIZE;\n                    var marker = new ShapeElement(deepExtend({}, icon));\n                    this.marker = marker;\n                    this.append(marker);\n                    if (this.label) {\n                        this.append(this.label);\n                    }\n                    marker.reflow(new Box());\n                    this.wrapperBox = box.wrap(marker.box);\n                }\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var marker = ref.marker;\n                var wrapperBox = ref.wrapperBox;\n                var center = targetBox.center();\n                var length = options.line.length;\n                var position = options.position;\n                if (options.visible) {\n                    var lineStart, box, contentBox;\n                    if (inArray(position, [\n                            LEFT,\n                            RIGHT\n                        ])) {\n                        if (position === LEFT) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(-length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x1,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x2,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x2,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x1,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    } else {\n                        if (position === BOTTOM) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y2\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y1\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, -length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y1\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y2\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    }\n                    if (marker) {\n                        marker.reflow(contentBox);\n                    }\n                    if (label) {\n                        label.reflow(contentBox);\n                        if (marker) {\n                            if (options.label.position === OUTSIDE) {\n                                label.box.alignTo(marker.box, position);\n                            }\n                            label.reflow(label.box);\n                        }\n                    }\n                    this.contentBox = contentBox;\n                    this.targetBox = targetBox;\n                    this.box = box || contentBox;\n                }\n            },\n            createVisual: function () {\n                BoxElement.fn.createVisual.call(this);\n                this.visual.options.noclip = this.options.noclip;\n                if (this.options.visible) {\n                    this.createLine();\n                }\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (options.visible && customVisual) {\n                    this.visual = customVisual($.extend(this.fields, {\n                        sender: this.getSender(),\n                        rect: this.targetBox.toRect(),\n                        options: {\n                            background: options.background,\n                            border: options.background,\n                            icon: options.icon,\n                            label: options.label,\n                            line: options.line,\n                            position: options.position,\n                            visible: options.visible\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    }));\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            createLine: function () {\n                var options = this.options.line;\n                if (this.linePoints) {\n                    var path = Path.fromPoints(this.linePoints, {\n                        stroke: {\n                            color: options.color,\n                            width: options.width,\n                            dashType: options.dashType\n                        }\n                    });\n                    alignPathToPixel(path);\n                    this.visual.append(path);\n                }\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_HOVER, args)) {\n                    e.preventDefault();\n                }\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return $.extend(this.fields, {\n                    element: eventElement(e),\n                    text: defined(options.label) ? options.label.text : '',\n                    visual: this.visual\n                });\n            }\n        });\n        setDefaultOptions(Note, {\n            icon: {\n                visible: true,\n                type: CIRCLE\n            },\n            label: {\n                position: INSIDE,\n                visible: true,\n                align: CENTER,\n                vAlign: CENTER\n            },\n            line: { visible: true },\n            visible: true,\n            position: TOP,\n            zIndex: 2\n        });\n        function createAxisTick(options, tickOptions) {\n            var tickX = options.tickX;\n            var tickY = options.tickY;\n            var position = options.position;\n            var tick = new Path({\n                stroke: {\n                    width: tickOptions.width,\n                    color: tickOptions.color\n                }\n            });\n            if (options.vertical) {\n                tick.moveTo(tickX, position).lineTo(tickX + tickOptions.size, position);\n            } else {\n                tick.moveTo(position, tickY).lineTo(position, tickY + tickOptions.size);\n            }\n            alignPathToPixel(tick);\n            return tick;\n        }\n        function createAxisGridLine(options, gridLine) {\n            var lineStart = options.lineStart;\n            var lineEnd = options.lineEnd;\n            var position = options.position;\n            var line = new Path({\n                stroke: {\n                    width: gridLine.width,\n                    color: gridLine.color,\n                    dashType: gridLine.dashType\n                }\n            });\n            if (options.vertical) {\n                line.moveTo(lineStart, position).lineTo(lineEnd, position);\n            } else {\n                line.moveTo(position, lineStart).lineTo(position, lineEnd);\n            }\n            alignPathToPixel(line);\n            return line;\n        }\n        var Axis = ChartElement.extend({\n            init: function (options, chartService) {\n                if (chartService === void 0) {\n                    chartService = new ChartService();\n                }\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!this.options.visible) {\n                    this.options = deepExtend({}, this.options, {\n                        labels: { visible: false },\n                        line: { visible: false },\n                        margin: 0,\n                        majorTickSize: 0,\n                        minorTickSize: 0\n                    });\n                }\n                this.options.minorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.minorTickType !== NONE\n                }, this.options.minorTicks, {\n                    size: this.options.minorTickSize,\n                    align: this.options.minorTickType\n                });\n                this.options.majorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.majorTickType !== NONE\n                }, this.options.majorTicks, {\n                    size: this.options.majorTickSize,\n                    align: this.options.majorTickType\n                });\n                if (!this.options._deferLabels) {\n                    this.createLabels();\n                }\n                this.createTitle();\n                this.createNotes();\n            },\n            labelsRange: function () {\n                return {\n                    min: this.options.labels.skip,\n                    max: this.labelsCount()\n                };\n            },\n            createLabels: function () {\n                var this$1 = this;\n                var options = this.options;\n                var align = options.vertical ? RIGHT : CENTER;\n                var labelOptions = deepExtend({}, options.labels, {\n                    align: align,\n                    zIndex: options.zIndex\n                });\n                var step = Math.max(1, labelOptions.step);\n                this.children = grep(this.children, function (child) {\n                    return !(child instanceof AxisLabel);\n                });\n                this.labels = [];\n                if (labelOptions.visible) {\n                    var range = this.labelsRange();\n                    var rotation = labelOptions.rotation;\n                    if (isObject(rotation)) {\n                        labelOptions.alignRotation = rotation.align;\n                        labelOptions.rotation = rotation.angle;\n                    }\n                    if (labelOptions.rotation === 'auto') {\n                        labelOptions.rotation = 0;\n                        options.autoRotateLabels = true;\n                    }\n                    for (var idx = range.min; idx < range.max; idx += step) {\n                        var label = this$1.createAxisLabel(idx, labelOptions);\n                        if (label) {\n                            this$1.append(label);\n                            this$1.labels.push(label);\n                        }\n                    }\n                }\n            },\n            lineBox: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var axisX = mirror ? box.x1 : box.x2;\n                var axisY = mirror ? box.y2 : box.y1;\n                var lineWidth = options.line.width || 0;\n                return vertical ? new Box(axisX, box.y1, axisX, box.y2 - lineWidth) : new Box(box.x1, axisY, box.x2 - lineWidth, axisY);\n            },\n            createTitle: function () {\n                var options = this.options;\n                var titleOptions = deepExtend({\n                    rotation: options.vertical ? -90 : 0,\n                    text: '',\n                    zIndex: 1,\n                    visualSize: true\n                }, options.title);\n                if (titleOptions.visible && titleOptions.text) {\n                    var title = new TextBox(titleOptions.text, titleOptions);\n                    this.append(title);\n                    this.title = title;\n                }\n            },\n            createNotes: function () {\n                var this$1 = this;\n                var options = this.options;\n                var notes = options.notes;\n                var items = notes.data || [];\n                this.notes = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = deepExtend({}, notes, items[i]);\n                    item.value = this$1.parseNoteValue(item.value);\n                    var note = new Note({\n                        value: item.value,\n                        text: item.label.text,\n                        dataItem: item\n                    }, item, this$1.chartService);\n                    if (note.options.visible) {\n                        if (defined(note.options.position)) {\n                            if (options.vertical && !inArray(note.options.position, [\n                                    LEFT,\n                                    RIGHT\n                                ])) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else if (!options.vertical && !inArray(note.options.position, [\n                                    TOP,\n                                    BOTTOM\n                                ])) {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        } else {\n                            if (options.vertical) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        }\n                        this$1.append(note);\n                        this$1.notes.push(note);\n                    }\n                }\n            },\n            parseNoteValue: function (value) {\n                return value;\n            },\n            renderVisual: function () {\n                ChartElement.fn.renderVisual.call(this);\n                this.createPlotBands();\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this.createBackground();\n                this.createLine();\n            },\n            gridLinesVisual: function () {\n                var gridLines = this._gridLines;\n                if (!gridLines) {\n                    gridLines = this._gridLines = new Group({ zIndex: -2 });\n                    this.appendVisual(this._gridLines);\n                }\n                return gridLines;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n                var tickLineOptions = { vertical: options.vertical };\n                function render(tickPositions, tickOptions, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, tickOptions.step);\n                    if (tickOptions.visible) {\n                        for (var i = tickOptions.skip; i < count; i += step) {\n                            if (defined(skipUnit) && i % skipUnit === 0) {\n                                continue;\n                            }\n                            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                            tickLineOptions.position = tickPositions[i];\n                            lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), options.majorTicks);\n                render(this.getMinorTickPositions(), options.minorTicks, majorUnit / options.minorUnit);\n            },\n            createLine: function () {\n                var options = this.options;\n                var line = options.line;\n                var lineBox = this.lineBox();\n                if (line.width > 0 && line.visible) {\n                    var path = new Path({\n                        stroke: {\n                            width: line.width,\n                            color: line.color,\n                            dashType: line.dashType\n                        }\n                    });\n                    path.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n                    if (options._alignLines) {\n                        alignPathToPixel(path);\n                    }\n                    var group = this._lineGroup = new Group();\n                    group.append(path);\n                    this.visual.append(group);\n                    this.createTicks(group);\n                }\n            },\n            getActualTickSize: function () {\n                var options = this.options;\n                var tickSize = 0;\n                if (options.majorTicks.visible && options.minorTicks.visible) {\n                    tickSize = Math.max(options.majorTicks.size, options.minorTicks.size);\n                } else if (options.majorTicks.visible) {\n                    tickSize = options.majorTicks.size;\n                } else if (options.minorTicks.visible) {\n                    tickSize = options.minorTicks.size;\n                }\n                return tickSize;\n            },\n            createBackground: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var background = options.background;\n                if (background) {\n                    this._backgroundPath = Path.fromRect(box.toRect(), {\n                        fill: { color: background },\n                        stroke: null\n                    });\n                    this.visual.append(this._backgroundPath);\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var options = this.options;\n                var plotBands = options.plotBands || [];\n                var vertical = options.vertical;\n                var plotArea = this.plotArea;\n                if (plotBands.length === 0) {\n                    return;\n                }\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                var altAxis = grep(this.pane.axes, function (axis) {\n                    return axis.options.vertical !== this$1.options.vertical;\n                })[0];\n                for (var idx = 0; idx < plotBands.length; idx++) {\n                    var item = plotBands[idx];\n                    var slotX = void 0, slotY = void 0;\n                    if (vertical) {\n                        slotX = (altAxis || plotArea.axisX).lineBox();\n                        slotY = this$1.getSlot(item.from, item.to, true);\n                    } else {\n                        slotX = this$1.getSlot(item.from, item.to, true);\n                        slotY = (altAxis || plotArea.axisY).lineBox();\n                    }\n                    if (slotX.width() !== 0 && slotY.height() !== 0) {\n                        var bandRect = new Rect([\n                            slotX.x1,\n                            slotY.y1\n                        ], [\n                            slotX.width(),\n                            slotY.height()\n                        ]);\n                        var path = Path.fromRect(bandRect, {\n                            fill: {\n                                color: item.color,\n                                opacity: item.opacity\n                            },\n                            stroke: null\n                        });\n                        group.append(path);\n                    }\n                }\n                this.appendVisual(group);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var minorUnit = options.minorUnit;\n                var vertical = options.vertical;\n                var axisLineVisible = altAxis.options.line.visible;\n                var majorUnit = majorGridLines.visible ? options.majorUnit : 0;\n                var lineBox = altAxis.lineBox();\n                var linePos = lineBox[vertical ? 'y1' : 'x1'];\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPositions, gridLine, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, gridLine.step);\n                    if (gridLine.visible) {\n                        for (var i = gridLine.skip; i < count; i += step) {\n                            var pos = round(tickPositions[i]);\n                            if (!inArray(pos, majorTicks)) {\n                                if (i % skipUnit !== 0 && (!axisLineVisible || linePos !== pos)) {\n                                    lineOptions.position = pos;\n                                    container.append(createAxisGridLine(lineOptions, gridLine));\n                                    majorTicks.push(pos);\n                                }\n                            }\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), majorGridLines);\n                render(this.getMinorTickPositions(), minorGridLines, majorUnit / minorUnit);\n                return container.children;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var title = ref.title;\n                var vertical = options.vertical;\n                var count = labels.length;\n                var sizeFn = vertical ? WIDTH : HEIGHT;\n                var titleSize = title ? title.box[sizeFn]() : 0;\n                var space = this.getActualTickSize() + options.margin + titleSize;\n                var rootBox = (this.getRoot() || {}).box || box;\n                var boxSize = rootBox[sizeFn]();\n                var maxLabelSize = 0;\n                for (var i = 0; i < count; i++) {\n                    var labelSize = labels[i].box[sizeFn]();\n                    if (labelSize + space <= boxSize) {\n                        maxLabelSize = Math.max(maxLabelSize, labelSize);\n                    }\n                }\n                if (vertical) {\n                    this.box = new Box(box.x1, box.y1, box.x1 + maxLabelSize + space, box.y2);\n                } else {\n                    this.box = new Box(box.x1, box.y1, box.x2, box.y1 + maxLabelSize + space);\n                }\n                this.arrangeTitle();\n                this.arrangeLabels();\n                this.arrangeNotes();\n            },\n            getLabelsTickPositions: function () {\n                return this.getMajorTickPositions();\n            },\n            labelTickIndex: function (label) {\n                return label.index;\n            },\n            arrangeLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelsBetweenTicks = !options.justified;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var tickPositions = this.getLabelsTickPositions();\n                var labelOffset = this.getActualTickSize() + options.margin;\n                for (var idx = 0; idx < labels.length; idx++) {\n                    var label = labels[idx];\n                    var tickIx = this$1.labelTickIndex(label);\n                    var labelSize = vertical ? label.box.height() : label.box.width();\n                    var labelPos = tickPositions[tickIx] - labelSize / 2;\n                    var labelBox = void 0, firstTickPosition = void 0, nextTickPosition = void 0;\n                    if (vertical) {\n                        if (labelsBetweenTicks) {\n                            firstTickPosition = tickPositions[tickIx];\n                            nextTickPosition = tickPositions[tickIx + 1];\n                            var middle = firstTickPosition + (nextTickPosition - firstTickPosition) / 2;\n                            labelPos = middle - labelSize / 2;\n                        }\n                        var labelX = lineBox.x2;\n                        if (mirror) {\n                            labelX += labelOffset;\n                            label.options.rotationOrigin = LEFT;\n                        } else {\n                            labelX -= labelOffset + label.box.width();\n                            label.options.rotationOrigin = RIGHT;\n                        }\n                        labelBox = label.box.move(labelX, labelPos);\n                    } else {\n                        if (labelsBetweenTicks) {\n                            firstTickPosition = tickPositions[tickIx];\n                            nextTickPosition = tickPositions[tickIx + 1];\n                        } else {\n                            firstTickPosition = labelPos;\n                            nextTickPosition = labelPos + labelSize;\n                        }\n                        var labelY = lineBox.y1;\n                        if (mirror) {\n                            labelY -= labelOffset + label.box.height();\n                            label.options.rotationOrigin = BOTTOM;\n                        } else {\n                            labelY += labelOffset;\n                            label.options.rotationOrigin = TOP;\n                        }\n                        labelBox = new Box(firstTickPosition, labelY, nextTickPosition, labelY + label.box.height());\n                    }\n                    label.reflow(labelBox);\n                }\n            },\n            autoRotateLabels: function () {\n                if (this.options.autoRotateLabels && !this.options.vertical) {\n                    var tickPositions = this.getMajorTickPositions();\n                    var labels = this.labels;\n                    var angle;\n                    for (var idx = 0; idx < labels.length; idx++) {\n                        var width = tickPositions[idx + 1] - tickPositions[idx];\n                        var labelBox = labels[idx].box;\n                        if (labelBox.width() > width) {\n                            if (labelBox.height() > width) {\n                                angle = -90;\n                                break;\n                            }\n                            angle = -45;\n                        }\n                    }\n                    if (angle) {\n                        for (var idx$1 = 0; idx$1 < labels.length; idx$1++) {\n                            labels[idx$1].options.rotation = angle;\n                            labels[idx$1].reflow(new Box());\n                        }\n                        return true;\n                    }\n                }\n            },\n            arrangeTitle: function () {\n                var ref = this;\n                var options = ref.options;\n                var title = ref.title;\n                var mirror = options.labels.mirror;\n                var vertical = options.vertical;\n                if (title) {\n                    if (vertical) {\n                        title.options.align = mirror ? RIGHT : LEFT;\n                        title.options.vAlign = title.options.position;\n                    } else {\n                        title.options.align = title.options.position;\n                        title.options.vAlign = mirror ? TOP : BOTTOM;\n                    }\n                    title.reflow(this.box);\n                }\n            },\n            arrangeNotes: function () {\n                var this$1 = this;\n                for (var idx = 0; idx < this.notes.length; idx++) {\n                    var item = this$1.notes[idx];\n                    var value = item.options.value;\n                    var slot = void 0;\n                    if (defined(value)) {\n                        if (this$1.shouldRenderNote(value)) {\n                            item.show();\n                        } else {\n                            item.hide();\n                        }\n                        slot = this$1.noteSlot(value);\n                    } else {\n                        item.hide();\n                    }\n                    item.reflow(slot || this$1.lineBox());\n                }\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            alignTo: function (secondAxis) {\n                var lineBox = secondAxis.lineBox();\n                var vertical = this.options.vertical;\n                var pos = vertical ? Y : X;\n                this.box.snapTo(lineBox, pos);\n                if (vertical) {\n                    this.box.shrink(0, this.lineBox().height() - lineBox.height());\n                } else {\n                    this.box.shrink(this.lineBox().width() - lineBox.width(), 0);\n                }\n                this.box[pos + 1] -= this.lineBox()[pos + 1] - lineBox[pos + 1];\n                this.box[pos + 2] -= this.lineBox()[pos + 2] - lineBox[pos + 2];\n            },\n            axisLabelText: function (value, dataItem, options) {\n                var text = value;\n                if (options.template) {\n                    var tmpl = TemplateService.compile(options.template);\n                    text = tmpl({\n                        value: value,\n                        dataItem: dataItem,\n                        format: options.format,\n                        culture: options.culture\n                    });\n                } else if (options.format) {\n                    text = this.chartService.format.localeAuto(options.format, [value], options.culture);\n                }\n                return text;\n            },\n            slot: function (from, to, limit) {\n                var slot = this.getSlot(from, to, limit);\n                if (slot) {\n                    return slot.toRect();\n                }\n            },\n            contentBox: function () {\n                var box = this.box.clone();\n                var labels = this.labels;\n                if (labels.length) {\n                    if (labels[0].options.visible) {\n                        box.wrap(labels[0].box);\n                    }\n                    var lastLabel = labels[labels.length - 1];\n                    if (lastLabel.options.visible) {\n                        box.wrap(lastLabel.box);\n                    }\n                }\n                return box;\n            },\n            limitRange: function (from, to, min, max, offset) {\n                var options = this.options;\n                if (from < min && offset < 0 && (!defined(options.min) || options.min <= min) || max < to && offset > 0 && (!defined(options.max) || max <= options.max)) {\n                    return null;\n                }\n                if (to < min && offset > 0 || max < from && offset < 0) {\n                    return {\n                        min: from,\n                        max: to\n                    };\n                }\n                var rangeSize = to - from;\n                var minValue = from;\n                var maxValue = to;\n                if (from < min) {\n                    minValue = limitValue(from, min, max);\n                    maxValue = limitValue(from + rangeSize, min + rangeSize, max);\n                } else if (to > max) {\n                    maxValue = limitValue(to, min, max);\n                    minValue = limitValue(to - rangeSize, min, max - rangeSize);\n                }\n                return {\n                    min: minValue,\n                    max: maxValue\n                };\n            },\n            valueRange: function () {\n                return {\n                    min: this.seriesMin,\n                    max: this.seriesMax\n                };\n            }\n        });\n        setDefaultOptions(Axis, {\n            labels: {\n                visible: true,\n                rotation: 0,\n                mirror: false,\n                step: 1,\n                skip: 0\n            },\n            line: {\n                width: 1,\n                color: BLACK,\n                visible: true\n            },\n            title: {\n                visible: true,\n                position: CENTER\n            },\n            majorTicks: {\n                align: OUTSIDE,\n                size: 4,\n                skip: 0,\n                step: 1\n            },\n            minorTicks: {\n                align: OUTSIDE,\n                size: 3,\n                skip: 0,\n                step: 1\n            },\n            axisCrossingValue: 0,\n            majorTickType: OUTSIDE,\n            minorTickType: NONE,\n            majorGridLines: {\n                skip: 0,\n                step: 1\n            },\n            minorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK,\n                skip: 0,\n                step: 1\n            },\n            margin: 5,\n            visible: true,\n            reverse: false,\n            justified: true,\n            notes: { label: { text: '' } },\n            _alignLines: true,\n            _deferLabels: false\n        });\n        var MIN_CATEGORY_POINTS_RANGE = 0.01;\n        var CategoryAxis = Axis.extend({\n            init: function (options, chartService) {\n                Axis.fn.init.call(this, options, chartService);\n                this._ticks = {};\n                this._initCategories(this.options);\n            },\n            _initCategories: function (options) {\n                var categories = (options.categories || []).slice(0);\n                var definedMin = defined(options.min);\n                var definedMax = defined(options.max);\n                options.categories = categories;\n                if ((definedMin || definedMax) && categories.length) {\n                    options.srcCategories = options.categories;\n                    var min = definedMin ? Math.floor(options.min) : 0;\n                    var max;\n                    if (definedMax) {\n                        max = options.justified ? Math.floor(options.max) + 1 : Math.ceil(options.max);\n                    } else {\n                        max = categories.length;\n                    }\n                    options.categories = options.categories.slice(min, max);\n                }\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var length = options.categories.length || 1;\n                var min = isNumber(options.min) ? options.min % 1 : 0;\n                var max;\n                if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n                    max = length - (1 - options.max % 1);\n                } else {\n                    max = length - (options.justified ? 1 : 0);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            totalRangeIndices: function (limit) {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.max;\n                } else if (isNumber(options.min)) {\n                    max = min + options.categories.length;\n                } else {\n                    max = (options.srcCategories || options.categories).length - (options.justified ? 1 : 0) || 1;\n                }\n                if (limit) {\n                    var totalRange = this.totalRange();\n                    min = limitValue(min, 0, totalRange.max);\n                    max = limitValue(max, 0, totalRange.max);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: isNumber(options.min) ? options.min : 0,\n                    max: isNumber(options.max) ? options.max : options.categories.length\n                };\n            },\n            totalRange: function () {\n                var options = this.options;\n                return {\n                    min: 0,\n                    max: Math.max(this._seriesMax || 0, (options.srcCategories || options.categories).length) - (options.justified ? 1 : 0)\n                };\n            },\n            getScale: function () {\n                var ref = this.rangeIndices();\n                var min = ref.min;\n                var max = ref.max;\n                var lineBox = this.lineBox();\n                var size = this.options.vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (max - min || 1);\n                return scale * (this.options.reverse ? -1 : 1);\n            },\n            getTickPositions: function (stepSize) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var ref$1 = this.rangeIndices();\n                var min = ref$1.min;\n                var max = ref$1.max;\n                var lineBox = this.lineBox();\n                var scale = this.getScale();\n                var pos = lineBox[(vertical ? Y : X) + (reverse ? 2 : 1)];\n                var positions = [];\n                var current = min % 1 !== 0 ? Math.floor(min / 1) + stepSize : min;\n                while (current <= max) {\n                    positions.push(pos + round(scale * (current - min), COORD_PRECISION));\n                    current += stepSize;\n                }\n                return positions;\n            },\n            getLabelsTickPositions: function () {\n                var tickPositions = this.getMajorTickPositions().slice(0);\n                var range = this.rangeIndices();\n                var scale = this.getScale();\n                var box = this.lineBox();\n                var options = this.options;\n                var axis = options.vertical ? Y : X;\n                var start = options.reverse ? 2 : 1;\n                var end = options.reverse ? 1 : 2;\n                if (range.min % 1 !== 0) {\n                    tickPositions.unshift(box[axis + start] - scale * (range.min % 1));\n                }\n                if (range.max % 1 !== 0) {\n                    tickPositions.push(box[axis + end] + scale * (1 - range.max % 1));\n                }\n                return tickPositions;\n            },\n            labelTickIndex: function (label) {\n                var range = this.rangeIndices();\n                var index = label.index;\n                if (range.min > 0) {\n                    index = index - Math.floor(range.min);\n                }\n                return index;\n            },\n            arrangeLabels: function () {\n                Axis.fn.arrangeLabels.call(this);\n                this.hideOutOfRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                var ref = this;\n                var box = ref.box;\n                var labels = ref.labels;\n                if (labels.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    var firstLabel = labels[0];\n                    var lastLabel = last(labels);\n                    if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                        firstLabel.options.visible = false;\n                    }\n                    if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                        lastLabel.options.visible = false;\n                    }\n                }\n            },\n            getMajorTickPositions: function () {\n                return this.getTicks().majorTicks;\n            },\n            getMinorTickPositions: function () {\n                return this.getTicks().minorTicks;\n            },\n            getTicks: function () {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var justified = ref.justified;\n                var cache = this._ticks;\n                var range = this.rangeIndices();\n                var lineBox = this.lineBox();\n                var hash = lineBox.getHash() + range.min + ',' + range.max + reverse + justified;\n                if (cache._hash !== hash) {\n                    cache._hash = hash;\n                    cache.majorTicks = this.getTickPositions(1);\n                    cache.minorTicks = this.getTickPositions(0.5);\n                }\n                return cache;\n            },\n            getSlot: function (from, to, limit) {\n                var ref = this;\n                var options = ref.options;\n                var reverse = options.reverse;\n                var justified = options.justified;\n                var vertical = options.vertical;\n                var ref$1 = this.rangeIndices();\n                var min = ref$1.min;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var slotBox = lineBox.clone();\n                var singleSlot = !defined(to);\n                var start = valueOrDefault(from, 0);\n                var end = valueOrDefault(to, start);\n                end = Math.max(end - 1, start);\n                end = Math.max(start, end);\n                var p1 = lineStart + (start - min) * scale;\n                var p2 = lineStart + (end + 1 - min) * scale;\n                if (singleSlot && justified) {\n                    p2 = p1;\n                }\n                if (limit) {\n                    p1 = limitValue(p1, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                    p2 = limitValue(p2, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                }\n                slotBox[valueAxis + 1] = reverse ? p2 : p1;\n                slotBox[valueAxis + 2] = reverse ? p1 : p2;\n                return slotBox;\n            },\n            slot: function (from, to, limit) {\n                var start = from;\n                var end = to;\n                if (typeof start === 'string') {\n                    start = this.categoryIndex(start);\n                }\n                if (typeof end === 'string') {\n                    end = this.categoryIndex(end);\n                }\n                return Axis.fn.slot.call(this, start, end, limit);\n            },\n            pointCategoryIndex: function (point) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var justified = ref.justified;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var range = this.rangeIndices();\n                var startValue = reverse ? range.max : range.min;\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + 1];\n                var lineEnd = lineBox[valueAxis + 2];\n                var pos = point[valueAxis];\n                if (pos < lineStart || pos > lineEnd) {\n                    return null;\n                }\n                var value = startValue + (pos - lineStart) / scale;\n                var diff = value % 1;\n                if (justified) {\n                    value = Math.round(value);\n                } else if (diff === 0 && value > 0) {\n                    value--;\n                }\n                return Math.floor(value);\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.options.categories[index];\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var index = (options.srcCategories || options.categories).indexOf(value);\n                return index - Math.floor(options.min || 0);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = options.categories.length;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                return {\n                    min: offset,\n                    max: range + offset\n                };\n            },\n            zoomRange: function (rate) {\n                var rangeIndices = this.totalRangeIndices();\n                var ref = this.totalRange();\n                var totalMin = ref.min;\n                var totalMax = ref.max;\n                var min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n                var max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n                if (max - min > 0) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            scaleRange: function (scale) {\n                var range = this.options.categories.length;\n                var delta = scale * range;\n                return {\n                    min: -delta,\n                    max: range + delta\n                };\n            },\n            labelsCount: function () {\n                var labelsRange = this.labelsRange();\n                return labelsRange.max - labelsRange.min;\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var justified = options.justified;\n                var labelOptions = options.labels;\n                var ref = this.totalRangeIndices(true);\n                var min = ref.min;\n                var max = ref.max;\n                var start = Math.floor(min);\n                if (!justified) {\n                    min = Math.floor(min);\n                    max = Math.ceil(max);\n                } else {\n                    min = Math.ceil(min);\n                    max = Math.floor(max);\n                }\n                var skip;\n                if (min > labelOptions.skip) {\n                    skip = labelOptions.skip + labelOptions.step * Math.ceil((min - labelOptions.skip) / labelOptions.step);\n                } else {\n                    skip = labelOptions.skip;\n                }\n                return {\n                    min: skip - start,\n                    max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n                };\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var dataItem = options.dataItems ? options.dataItems[index] : null;\n                var category = valueOrDefault(options.categories[index], '');\n                var text = this.axisLabelText(category, dataItem, labelOptions);\n                return new AxisLabel(category, text, index, dataItem, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.totalRangeIndices();\n                return Math.floor(range.min) <= value && value <= Math.ceil(range.max);\n            },\n            noteSlot: function (value) {\n                var options = this.options;\n                var index = value - Math.floor(options.min || 0);\n                return this.getSlot(index);\n            },\n            arrangeNotes: function () {\n                Axis.fn.arrangeNotes.call(this);\n                this.hideOutOfRangeNotes();\n            },\n            hideOutOfRangeNotes: function () {\n                var ref = this;\n                var notes = ref.notes;\n                var box = ref.box;\n                if (notes && notes.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    for (var idx = 0; idx < notes.length; idx++) {\n                        var note = notes[idx];\n                        if (note.box && (end < note.box[valueAxis + 1] || note.box[valueAxis + 2] < start)) {\n                            note.hide();\n                        }\n                    }\n                }\n            },\n            pan: function (delta) {\n                var range = this.totalRangeIndices(true);\n                var scale = this.getScale();\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var totalRange = this.totalRange();\n                var min = range.min + offset;\n                var max = range.max + offset;\n                return this.limitRange(min, max, 0, totalRange.max, offset);\n            },\n            pointsRange: function (start, end) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var range = this.totalRangeIndices(true);\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var diffStart = start[valueAxis] - lineStart;\n                var diffEnd = end[valueAxis] - lineStart;\n                var min = range.min + diffStart / scale;\n                var max = range.min + diffEnd / scale;\n                var rangeMin = Math.min(min, max);\n                var rangeMax = Math.max(min, max);\n                if (rangeMax - rangeMin >= MIN_CATEGORY_POINTS_RANGE) {\n                    return {\n                        min: rangeMin,\n                        max: rangeMax\n                    };\n                }\n            },\n            valueRange: function () {\n                return this.range();\n            }\n        });\n        setDefaultOptions(CategoryAxis, {\n            type: 'category',\n            categories: [],\n            vertical: false,\n            majorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK\n            },\n            labels: { zIndex: 1 },\n            justified: false,\n            _deferLabels: true\n        });\n        var MILLISECONDS = 'milliseconds';\n        var SECONDS = 'seconds';\n        var MINUTES = 'minutes';\n        var HOURS = 'hours';\n        var DAYS = 'days';\n        var WEEKS = 'weeks';\n        var MONTHS = 'months';\n        var YEARS = 'years';\n        var TIME_PER_MILLISECOND = 1;\n        var TIME_PER_SECOND = 1000;\n        var TIME_PER_MINUTE = 60 * TIME_PER_SECOND;\n        var TIME_PER_HOUR = 60 * TIME_PER_MINUTE;\n        var TIME_PER_DAY = 24 * TIME_PER_HOUR;\n        var TIME_PER_WEEK = 7 * TIME_PER_DAY;\n        var TIME_PER_MONTH = 31 * TIME_PER_DAY;\n        var TIME_PER_YEAR = 365 * TIME_PER_DAY;\n        var TIME_PER_UNIT = {\n            'years': TIME_PER_YEAR,\n            'months': TIME_PER_MONTH,\n            'weeks': TIME_PER_WEEK,\n            'days': TIME_PER_DAY,\n            'hours': TIME_PER_HOUR,\n            'minutes': TIME_PER_MINUTE,\n            'seconds': TIME_PER_SECOND,\n            'milliseconds': TIME_PER_MILLISECOND\n        };\n        function absoluteDateDiff(a, b) {\n            var diff = a.getTime() - b;\n            var offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - offsetDiff * TIME_PER_MINUTE;\n        }\n        function addTicks(date, ticks) {\n            return new Date(date.getTime() + ticks);\n        }\n        function toDate(value) {\n            var result;\n            if (value instanceof Date) {\n                result = value;\n            } else if (value) {\n                result = new Date(value);\n            }\n            return result;\n        }\n        function startOfWeek(date, weekStartDay) {\n            if (weekStartDay === void 0) {\n                weekStartDay = 0;\n            }\n            var daysToSubtract = 0;\n            var day = date.getDay();\n            if (!isNaN(day)) {\n                while (day !== weekStartDay) {\n                    if (day === 0) {\n                        day = 6;\n                    } else {\n                        day--;\n                    }\n                    daysToSubtract++;\n                }\n            }\n            return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n        }\n        function adjustDST(date, hours) {\n            if (hours === 0 && date.getHours() === 23) {\n                date.setHours(date.getHours() + 2);\n                return true;\n            }\n            return false;\n        }\n        function addHours(date, hours) {\n            var roundedDate = new Date(date);\n            roundedDate.setMinutes(0, 0, 0);\n            var tzDiff = (date.getTimezoneOffset() - roundedDate.getTimezoneOffset()) * TIME_PER_MINUTE;\n            return addTicks(roundedDate, tzDiff + hours * TIME_PER_HOUR);\n        }\n        function addDuration(dateValue, value, unit, weekStartDay) {\n            var result = dateValue;\n            if (dateValue) {\n                var date = toDate(dateValue);\n                var hours = date.getHours();\n                if (unit === YEARS) {\n                    result = new Date(date.getFullYear() + value, 0, 1);\n                    adjustDST(result, 0);\n                } else if (unit === MONTHS) {\n                    result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n                    adjustDST(result, hours);\n                } else if (unit === WEEKS) {\n                    result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n                    adjustDST(result, hours);\n                } else if (unit === DAYS) {\n                    result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n                    adjustDST(result, hours);\n                } else if (unit === HOURS) {\n                    result = addHours(date, value);\n                } else if (unit === MINUTES) {\n                    result = addTicks(date, value * TIME_PER_MINUTE);\n                    if (result.getSeconds() > 0) {\n                        result.setSeconds(0);\n                    }\n                } else if (unit === SECONDS) {\n                    result = addTicks(date, value * TIME_PER_SECOND);\n                } else if (unit === MILLISECONDS) {\n                    result = addTicks(date, value);\n                }\n                if (unit !== MILLISECONDS && result.getMilliseconds() > 0) {\n                    result.setMilliseconds(0);\n                }\n            }\n            return result;\n        }\n        function floorDate(date, unit, weekStartDay) {\n            return addDuration(toDate(date), 0, unit, weekStartDay);\n        }\n        function ceilDate(dateValue, unit, weekStartDay) {\n            var date = toDate(dateValue);\n            if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n                return date;\n            }\n            return addDuration(date, 1, unit, weekStartDay);\n        }\n        function dateComparer(a, b) {\n            if (a && b) {\n                return a.getTime() - b.getTime();\n            }\n            return -1;\n        }\n        function dateDiff(a, b) {\n            return a.getTime() - b;\n        }\n        function toTime(value) {\n            if (isArray(value)) {\n                var result = [];\n                for (var idx = 0; idx < value.length; idx++) {\n                    result.push(toTime(value[idx]));\n                }\n                return result;\n            } else if (value) {\n                return toDate(value).getTime();\n            }\n        }\n        function dateEquals(a, b) {\n            if (a && b) {\n                return toTime(a) === toTime(b);\n            }\n            return a === b;\n        }\n        function timeIndex(date, start, baseUnit) {\n            return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n        }\n        function dateIndex(value, start, baseUnit, baseUnitStep) {\n            var date = toDate(value);\n            var startDate = toDate(start);\n            var index;\n            if (baseUnit === MONTHS) {\n                index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n            } else if (baseUnit === YEARS) {\n                index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n            } else if (baseUnit === DAYS || baseUnit === WEEKS) {\n                index = timeIndex(date, startDate, baseUnit);\n            } else {\n                index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n            }\n            return index / baseUnitStep;\n        }\n        function duration(a, b, unit) {\n            var diff;\n            if (unit === YEARS) {\n                diff = b.getFullYear() - a.getFullYear();\n            } else if (unit === MONTHS) {\n                diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n            } else if (unit === DAYS) {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_DAY);\n            } else {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n            }\n            return diff;\n        }\n        function lteDateIndex(date, sortedDates) {\n            var low = 0;\n            var high = sortedDates.length - 1;\n            var index;\n            while (low <= high) {\n                index = Math.floor((low + high) / 2);\n                var currentDate = sortedDates[index];\n                if (currentDate < date) {\n                    low = index + 1;\n                    continue;\n                }\n                if (currentDate > date) {\n                    high = index - 1;\n                    continue;\n                }\n                while (dateEquals(sortedDates[index - 1], date)) {\n                    index--;\n                }\n                return index;\n            }\n            if (sortedDates[index] <= date) {\n                return index;\n            }\n            return index - 1;\n        }\n        function parseDate(intlService, date) {\n            var result;\n            if (isString(date)) {\n                result = intlService.parseDate(date) || toDate(date);\n            } else {\n                result = toDate(date);\n            }\n            return result;\n        }\n        function parseDates(intlService, dates) {\n            if (isArray(dates)) {\n                var result = [];\n                for (var idx = 0; idx < dates.length; idx++) {\n                    result.push(parseDate(intlService, dates[idx]));\n                }\n                return result;\n            }\n            return parseDate(intlService, dates);\n        }\n        var COORDINATE_LIMIT = 300000;\n        var DateLabelFormats = {\n            seconds: 'HH:mm:ss',\n            minutes: 'HH:mm',\n            hours: 'HH:mm',\n            days: 'M/d',\n            weeks: 'M/d',\n            months: 'MMM \\'yy',\n            years: 'yyyy'\n        };\n        var ZERO_THRESHOLD = 0.2;\n        var AUTO = 'auto';\n        var BASE_UNITS = [\n            MILLISECONDS,\n            SECONDS,\n            MINUTES,\n            HOURS,\n            DAYS,\n            WEEKS,\n            MONTHS,\n            YEARS\n        ];\n        var FIT = 'fit';\n        var DateCategoryAxis = CategoryAxis.extend({\n            init: function (axisOptions, chartService) {\n                CategoryAxis.fn.init.call(this, axisOptions, chartService);\n                var intlService = chartService.intl;\n                var options = this.options;\n                options = deepExtend({ roundToBaseUnit: true }, options, {\n                    categories: parseDates(intlService, options.categories),\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max)\n                });\n                options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n                options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n                if (options.categories && options.categories.length > 0) {\n                    var baseUnit = (options.baseUnit || '').toLowerCase();\n                    var useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n                    if (useDefault) {\n                        options.baseUnit = this.defaultBaseUnit(options);\n                    }\n                    if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                        this.autoBaseUnit(options);\n                    }\n                    this._groupsStart = addDuration(options.categories[0], 0, options.baseUnit, options.weekStartDay);\n                    this.groupCategories(options);\n                } else {\n                    options.baseUnit = options.baseUnit || DAYS;\n                }\n                this.options = options;\n            },\n            _initCategories: function () {\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                var categories = this.options.categories || [];\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n            },\n            parseNoteValue: function (value) {\n                return parseDate(this.chartService.intl, value);\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / (range.max - range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if (range.min && range.max) {\n                    var from = addTicks(options.min || range.min, offset);\n                    var to = addTicks(options.max || range.max, offset);\n                    range = {\n                        min: addDuration(from, 0, baseUnit, weekStartDay),\n                        max: addDuration(to, 0, baseUnit, weekStartDay)\n                    };\n                }\n                return range;\n            },\n            scaleRange: function (delta) {\n                var rounds = Math.abs(delta);\n                var result = this.range();\n                var from = result.min;\n                var to = result.max;\n                if (from && to) {\n                    while (rounds--) {\n                        var range = dateDiff(from, to);\n                        var step = Math.round(range * 0.1);\n                        if (delta < 0) {\n                            from = addTicks(from, step);\n                            to = addTicks(to, -step);\n                        } else {\n                            from = addTicks(from, -step);\n                            to = addTicks(to, step);\n                        }\n                    }\n                    result = {\n                        min: from,\n                        max: to\n                    };\n                }\n                return result;\n            },\n            defaultBaseUnit: function (options) {\n                var categories = options.categories;\n                var count = defined(categories) ? categories.length : 0;\n                var minDiff = MAX_VALUE;\n                var lastCategory, unit;\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    var category = categories[categoryIx];\n                    if (category && lastCategory) {\n                        var diff = absoluteDateDiff(category, lastCategory);\n                        if (diff > 0) {\n                            minDiff = Math.min(minDiff, diff);\n                            if (minDiff >= TIME_PER_YEAR) {\n                                unit = YEARS;\n                            } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                                unit = MONTHS;\n                            } else if (minDiff >= TIME_PER_WEEK) {\n                                unit = WEEKS;\n                            } else if (minDiff >= TIME_PER_DAY) {\n                                unit = DAYS;\n                            } else if (minDiff >= TIME_PER_HOUR) {\n                                unit = HOURS;\n                            } else if (minDiff >= TIME_PER_MINUTE) {\n                                unit = MINUTES;\n                            } else {\n                                unit = SECONDS;\n                            }\n                        }\n                    }\n                    lastCategory = category;\n                }\n                return unit || DAYS;\n            },\n            _categoryRange: function (categories) {\n                var range = categories._range;\n                if (!range) {\n                    range = categories._range = sparseArrayLimits(categories);\n                }\n                return range;\n            },\n            totalRange: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var categories = options.categories;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var categoryLimits = this.categoriesRange();\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                var minIdx = 0, maxIdx = 0;\n                if (categories.length) {\n                    minIdx = dateIndex(min, categories[0], baseUnit, baseUnitStep);\n                    maxIdx = dateIndex(max, categories[0], baseUnit, baseUnitStep);\n                    if (options.roundToBaseUnit) {\n                        minIdx = Math.floor(minIdx);\n                        maxIdx = options.justified ? Math.floor(maxIdx) : Math.ceil(maxIdx);\n                    }\n                }\n                return {\n                    min: minIdx,\n                    max: maxIdx\n                };\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var range = this.rangeIndices();\n                var min = Math.floor(range.min);\n                var max = Math.ceil(range.max);\n                return {\n                    min: min + labelOptions.skip,\n                    max: options.categories.length ? max + (options.justified ? 1 : 0) : 0\n                };\n            },\n            categoriesRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                var max = toDate(range.max);\n                if (!options.justified && dateEquals(max, this._roundToTotalStep(max, options, false))) {\n                    max = this._roundToTotalStep(max, options, true, true);\n                }\n                return {\n                    min: toDate(range.min),\n                    max: max\n                };\n            },\n            currentRange: function () {\n                var options = this.options;\n                var round$$1 = options.roundToBaseUnit !== false;\n                var totalRange = this.categoriesRange();\n                var min = options.min;\n                var max = options.max;\n                if (!min) {\n                    min = round$$1 ? this._roundToTotalStep(totalRange.min, options, false) : totalRange.min;\n                }\n                if (!max) {\n                    max = round$$1 ? this._roundToTotalStep(totalRange.max, options, !options.justified) : totalRange.max;\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            datesRange: function () {\n                var range = this._categoryRange(this.options.srcCategories || this.options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            },\n            pan: function (delta) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var ref = this.currentRange();\n                var min = ref.min;\n                var max = ref.max;\n                var totalLimits = this.totalLimits();\n                var scale = size / (max - min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var from = addTicks(min, offset);\n                var to = addTicks(max, offset);\n                var panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n                if (panRange) {\n                    panRange.min = toDate(panRange.min);\n                    panRange.max = toDate(panRange.max);\n                    panRange.baseUnit = options.baseUnit;\n                    panRange.baseUnitStep = options.baseUnitStep || 1;\n                    panRange.userSetBaseUnit = options.userSetBaseUnit;\n                    panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n                    return panRange;\n                }\n            },\n            pointsRange: function (start, end) {\n                var pointsRange = CategoryAxis.fn.pointsRange.call(this, start, end);\n                var datesRange = this.currentRange();\n                var indicesRange = this.rangeIndices();\n                var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n                var options = this.options;\n                var min = addTicks(datesRange.min, pointsRange.min * scale);\n                var max = addTicks(datesRange.min, pointsRange.max * scale);\n                return {\n                    min: min,\n                    max: max,\n                    baseUnit: options.userSetBaseUnit,\n                    baseUnitStep: options.userSetBaseUnitStep\n                };\n            },\n            zoomRange: function (delta) {\n                var options = this.options;\n                var totalLimits = this.totalLimits();\n                var weekStartDay = options.weekStartDay;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var ref = this.currentRange();\n                var rangeMin = ref.min;\n                var rangeMax = ref.max;\n                var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n                var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n                if (options.userSetBaseUnit === FIT) {\n                    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n                    var maxDateGroups = options.maxDateGroups;\n                    var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n                    var rangeDiff = dateDiff(rangeMax, rangeMin);\n                    var diff = dateDiff(max, min);\n                    var baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n                    var autoBaseUnitStep, ticks;\n                    if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n                        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                        min = addTicks(rangeMin, ticks);\n                        max = addTicks(rangeMax, -ticks);\n                    } else if (diff > maxDiff && baseUnit !== YEARS) {\n                        var stepIndex = 0;\n                        do {\n                            baseUnitIndex++;\n                            baseUnit = BASE_UNITS[baseUnitIndex];\n                            stepIndex = 0;\n                            ticks = 2 * TIME_PER_UNIT[baseUnit];\n                            do {\n                                autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                                stepIndex++;\n                            } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n                        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                        if (ticks > 0) {\n                            min = addTicks(rangeMin, -ticks);\n                            max = addTicks(rangeMax, ticks);\n                            min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                            max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                        }\n                    }\n                }\n                min = toDate(limitValue(min, totalLimits.min, totalLimits.max));\n                max = toDate(limitValue(max, totalLimits.min, totalLimits.max));\n                if (min && max && dateDiff(max, min) > 0) {\n                    return {\n                        min: min,\n                        max: max,\n                        baseUnit: options.userSetBaseUnit,\n                        baseUnitStep: options.userSetBaseUnitStep\n                    };\n                }\n            },\n            totalLimits: function () {\n                var options = this.options;\n                var datesRange = this.datesRange();\n                var min = this._roundToTotalStep(toDate(datesRange.min), options, false);\n                var max = datesRange.max;\n                if (!options.justified) {\n                    max = this._roundToTotalStep(max, options, true, dateEquals(max, this._roundToTotalStep(max, options, false)));\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function (rangeOptions) {\n                var options = rangeOptions || this.options;\n                var categories = options.categories;\n                var autoUnit = options.baseUnit === FIT;\n                var baseUnit = autoUnit ? BASE_UNITS[0] : options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var stepOptions = {\n                    baseUnit: baseUnit,\n                    baseUnitStep: baseUnitStep,\n                    weekStartDay: options.weekStartDay\n                };\n                var categoryLimits = this._categoryRange(categories);\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                return {\n                    min: this._roundToTotalStep(min, stepOptions, false),\n                    max: this._roundToTotalStep(max, stepOptions, true, true)\n                };\n            },\n            autoBaseUnit: function (options) {\n                var categoryLimits = this._categoryRange(options.categories);\n                var span = toDate(options.max || categoryLimits.max) - toDate(options.min || categoryLimits.min);\n                var maxDateGroups = options.maxDateGroups || this.options.maxDateGroups;\n                var autoUnit = options.baseUnit === FIT;\n                var autoUnitIx = 0;\n                var baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n                var units = span / TIME_PER_UNIT[baseUnit];\n                var totalUnits = units;\n                var autoBaseUnitSteps = deepExtend({}, this.options.autoBaseUnitSteps, options.autoBaseUnitSteps);\n                var unitSteps, step, nextStep;\n                while (!step || units >= maxDateGroups) {\n                    unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n                    nextStep = unitSteps.shift();\n                    if (nextStep) {\n                        step = nextStep;\n                        units = totalUnits / step;\n                    } else if (baseUnit === last(BASE_UNITS)) {\n                        step = Math.ceil(totalUnits / maxDateGroups);\n                        break;\n                    } else if (autoUnit) {\n                        baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                        totalUnits = span / TIME_PER_UNIT[baseUnit];\n                        unitSteps = null;\n                    } else {\n                        if (units > maxDateGroups) {\n                            step = Math.ceil(totalUnits / maxDateGroups);\n                        }\n                        break;\n                    }\n                }\n                options.baseUnitStep = step;\n                options.baseUnit = baseUnit;\n            },\n            groupCategories: function (options) {\n                var categories = options.categories;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var maxCategory = toDate(sparseArrayLimits(categories).max);\n                var ref = this.range(options);\n                var min = ref.min;\n                var max = ref.max;\n                var groups = [];\n                var nextDate;\n                for (var date = min; date < max; date = nextDate) {\n                    groups.push(date);\n                    nextDate = addDuration(date, baseUnitStep, baseUnit, options.weekStartDay);\n                    if (nextDate > maxCategory && !options.max) {\n                        break;\n                    }\n                }\n                options.srcCategories = categories;\n                options.categories = groups;\n            },\n            _roundToTotalStep: function (value, axisOptions, upper, roundToNext) {\n                var options = axisOptions || this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var start = this._groupsStart;\n                if (start) {\n                    var step = dateIndex(value, start, baseUnit, baseUnitStep);\n                    var roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n                    if (roundToNext) {\n                        roundedStep++;\n                    }\n                    return addDuration(start, roundedStep * baseUnitStep, baseUnit, options.weekStartDay);\n                }\n                return addDuration(value, upper ? baseUnitStep : 0, baseUnit, options.weekStartDay);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var dataItem = options.dataItems ? options.dataItems[index] : null;\n                var date = options.categories[index];\n                var baseUnit = options.baseUnit;\n                var unitFormat = labelOptions.dateFormats[baseUnit];\n                var visible = true;\n                if (options.justified) {\n                    var roundedDate = floorDate(date, baseUnit, options.weekStartDay);\n                    visible = dateEquals(roundedDate, date);\n                } else if (!options.roundToBaseUnit) {\n                    visible = !dateEquals(this.range().max, date);\n                }\n                if (visible) {\n                    labelOptions.format = labelOptions.format || unitFormat;\n                    var text = this.axisLabelText(date, dataItem, labelOptions);\n                    if (text) {\n                        return new AxisLabel(date, text, index, dataItem, labelOptions);\n                    }\n                }\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var categories = options.categories;\n                var index = -1;\n                if (categories.length) {\n                    index = Math.floor(dateIndex(toDate(value), categories[0], options.baseUnit, options.baseUnitStep || 1));\n                }\n                return index;\n            },\n            getSlot: function (a, b, limit) {\n                var start = a;\n                var end = b;\n                if (typeof start === OBJECT) {\n                    start = this.categoryIndex(start);\n                }\n                if (typeof end === OBJECT) {\n                    end = this.categoryIndex(end);\n                }\n                return CategoryAxis.fn.getSlot.call(this, start, end, limit);\n            },\n            valueRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            }\n        });\n        setDefaultOptions(DateCategoryAxis, {\n            type: DATE,\n            labels: { dateFormats: DateLabelFormats },\n            autoBaseUnitSteps: {\n                milliseconds: [\n                    1,\n                    10,\n                    100\n                ],\n                seconds: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                minutes: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                hours: [\n                    1,\n                    2,\n                    3\n                ],\n                days: [\n                    1,\n                    2,\n                    3\n                ],\n                weeks: [\n                    1,\n                    2\n                ],\n                months: [\n                    1,\n                    2,\n                    3,\n                    6\n                ],\n                years: [\n                    1,\n                    2,\n                    3,\n                    5,\n                    10,\n                    25,\n                    50\n                ]\n            },\n            maxDateGroups: 10\n        });\n        function autoMajorUnit(min, max) {\n            var diff = round(max - min, DEFAULT_PRECISION - 1);\n            if (diff === 0) {\n                if (max === 0) {\n                    return 0.1;\n                }\n                diff = Math.abs(max);\n            }\n            var scale = Math.pow(10, Math.floor(Math.log(diff) / Math.log(10)));\n            var relativeValue = round(diff / scale, DEFAULT_PRECISION);\n            var scaleMultiplier = 1;\n            if (relativeValue < 1.904762) {\n                scaleMultiplier = 0.2;\n            } else if (relativeValue < 4.761904) {\n                scaleMultiplier = 0.5;\n            } else if (relativeValue < 9.523809) {\n                scaleMultiplier = 1;\n            } else {\n                scaleMultiplier = 2;\n            }\n            return round(scale * scaleMultiplier, DEFAULT_PRECISION);\n        }\n        function autoAxisMin(min, max, narrow) {\n            if (!min && !max) {\n                return 0;\n            }\n            var axisMin;\n            if (min >= 0 && max >= 0) {\n                var minValue = min === max ? 0 : min;\n                var diff = (max - minValue) / max;\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMin = Math.max(0, minValue - (max - minValue) / 2);\n            } else {\n                axisMin = min;\n            }\n            return axisMin;\n        }\n        function autoAxisMax(min, max, narrow) {\n            if (!min && !max) {\n                return 1;\n            }\n            var axisMax;\n            if (min <= 0 && max <= 0) {\n                var maxValue = min === max ? 0 : max;\n                var diff = Math.abs((maxValue - min) / maxValue);\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMax = Math.min(0, maxValue - (min - maxValue) / 2);\n            } else {\n                axisMax = max;\n            }\n            return axisMax;\n        }\n        function floor(value, step) {\n            return round(Math.floor(value / step) * step, DEFAULT_PRECISION);\n        }\n        function ceil(value, step) {\n            return round(Math.ceil(value / step) * step, DEFAULT_PRECISION);\n        }\n        function limitCoordinate(value) {\n            return Math.max(Math.min(value, COORDINATE_LIMIT), -COORDINATE_LIMIT);\n        }\n        var MIN_VALUE_RANGE = Math.pow(10, -DEFAULT_PRECISION + 1);\n        var NumericAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                var autoOptions = autoAxisOptions(seriesMin, seriesMax, options);\n                var totalOptions = totalAxisOptions(autoOptions, options);\n                Axis.fn.init.call(this, axisOptions(autoOptions, options), chartService);\n                this.totalMin = totalOptions.min;\n                this.totalMax = totalOptions.max;\n                this.totalMajorUnit = totalOptions.majorUnit;\n                this.seriesMin = seriesMin;\n                this.seriesMax = seriesMax;\n            },\n            startValue: function () {\n                return 0;\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                if (stepValue === 0) {\n                    return 1;\n                }\n                var options = this.options;\n                var range = options.max - options.min;\n                return Math.floor(round(range / stepValue, COORD_PRECISION)) + 1;\n            },\n            getTickPositions: function (unit, skipUnit) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var lineBox = this.lineBox();\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var range = options.max - options.min;\n                var scale = lineSize / range;\n                var step = unit * scale;\n                var divisions = this.getDivisions(unit);\n                var dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var positions = [];\n                var pos = lineBox[(vertical ? Y : X) + startEdge];\n                var skipStep = 0;\n                if (skipUnit) {\n                    skipStep = skipUnit / unit;\n                }\n                for (var idx = 0; idx < divisions; idx++) {\n                    if (idx % skipStep !== 0) {\n                        positions.push(round(pos, COORD_PRECISION));\n                    }\n                    pos = pos + step * dir;\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                if (limit === void 0) {\n                    limit = false;\n                }\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (options.max - options.min));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 0;\n                }\n                if (!defined(end)) {\n                    end = start || 0;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                var p1, p2;\n                if (vertical) {\n                    p1 = options.max - Math.max(start, end);\n                    p2 = options.max - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - options.min;\n                    p2 = Math.max(start, end) - options.min;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = Number(options.max);\n                var min = Number(options.min);\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var offset = dir * (point[valueAxis] - lineStart);\n                var step = (max - min) / lineSize;\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = vertical ? max - valueOffset : min + valueOffset;\n                return round(value, DEFAULT_PRECISION);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = options.max;\n                var min = options.min;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = max - min;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: min + offset,\n                    max: max + offset\n                };\n            },\n            scaleRange: function (delta) {\n                var options = this.options;\n                var offset = -delta * options.majorUnit;\n                return {\n                    min: options.min - offset,\n                    max: options.max + offset\n                };\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var value = round(options.min + index * options.majorUnit, DEFAULT_PRECISION);\n                var text = this.axisLabelText(value, null, labelOptions);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            isValidRange: function (min, max) {\n                return max - min > MIN_VALUE_RANGE;\n            }\n        });\n        function autoAxisOptions(seriesMin, seriesMax, options) {\n            var narrowRange = options.narrowRange;\n            var autoMin = autoAxisMin(seriesMin, seriesMax, narrowRange);\n            var autoMax = autoAxisMax(seriesMin, seriesMax, narrowRange);\n            var majorUnit = autoMajorUnit(autoMin, autoMax);\n            var autoOptions = { majorUnit: majorUnit };\n            if (options.roundToMajorUnit !== false) {\n                if (autoMin < 0 && remainderClose(autoMin, majorUnit, 1 / 3)) {\n                    autoMin -= majorUnit;\n                }\n                if (autoMax > 0 && remainderClose(autoMax, majorUnit, 1 / 3)) {\n                    autoMax += majorUnit;\n                }\n            }\n            autoOptions.min = floor(autoMin, majorUnit);\n            autoOptions.max = ceil(autoMax, majorUnit);\n            return autoOptions;\n        }\n        function totalAxisOptions(autoOptions, options) {\n            return {\n                min: defined(options.min) ? Math.min(autoOptions.min, options.min) : autoOptions.min,\n                max: defined(options.max) ? Math.max(autoOptions.max, options.max) : autoOptions.max,\n                majorUnit: autoOptions.majorUnit\n            };\n        }\n        function axisOptions(autoOptions, userOptions) {\n            var options = userOptions;\n            if (userOptions) {\n                var userSetLimits = defined(userOptions.min) || defined(userOptions.max);\n                if (userSetLimits) {\n                    if (userOptions.min === userOptions.max) {\n                        if (userOptions.min > 0) {\n                            userOptions.min = 0;\n                        } else {\n                            userOptions.max = 1;\n                        }\n                    }\n                }\n                if (userOptions.majorUnit) {\n                    autoOptions.min = floor(autoOptions.min, userOptions.majorUnit);\n                    autoOptions.max = ceil(autoOptions.max, userOptions.majorUnit);\n                } else if (userSetLimits) {\n                    options = deepExtend(autoOptions, userOptions);\n                    autoOptions.majorUnit = autoMajorUnit(options.min, options.max);\n                }\n            }\n            autoOptions.minorUnit = (options.majorUnit || autoOptions.majorUnit) / 5;\n            return deepExtend(autoOptions, options);\n        }\n        function remainderClose(value, divisor, ratio) {\n            var remainder = round(Math.abs(value % divisor), DEFAULT_PRECISION);\n            var threshold = divisor * (1 - ratio);\n            return remainder === 0 || remainder > threshold;\n        }\n        setDefaultOptions(NumericAxis, {\n            type: 'numeric',\n            min: 0,\n            max: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { format: '#.####################' },\n            zIndex: 1\n        });\n        var DateValueAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, axisOptions, chartService) {\n                var min = toDate(seriesMin);\n                var max = toDate(seriesMax);\n                var intlService = chartService.intl;\n                var options = axisOptions || {};\n                options = deepExtend(options || {}, {\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max),\n                    axisCrossingValue: parseDates(intlService, options.axisCrossingValues || options.axisCrossingValue)\n                });\n                options = applyDefaults(min, max, options);\n                Axis.fn.init.call(this, options, chartService);\n                this.seriesMin = min;\n                this.seriesMax = max;\n                this.totalMin = toTime(floorDate(toTime(min) - 1, options.baseUnit));\n                this.totalMax = toTime(ceilDate(toTime(max) + 1, options.baseUnit));\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                var options = this.options;\n                return Math.floor(duration(options.min, options.max, options.baseUnit) / stepValue + 1);\n            },\n            getTickPositions: function (step) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var dir = (vertical ? -1 : 1) * (options.reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var start = lineBox[(vertical ? Y : X) + startEdge];\n                var divisions = this.getDivisions(step);\n                var timeRange = dateDiff(options.max, options.min);\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var scale = lineSize / timeRange;\n                var positions = [start];\n                for (var i = 1; i < divisions; i++) {\n                    var date = addDuration(options.min, i * step, options.baseUnit);\n                    var pos = start + dateDiff(date, options.min) * scale * dir;\n                    positions.push(round(pos, COORD_PRECISION));\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                return NumericAxis.prototype.getSlot.call(this, toDate(a), toDate(b), limit);\n            },\n            getValue: function (point) {\n                var value = NumericAxis.prototype.getValue.call(this, point);\n                return value !== null ? toDate(value) : null;\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var offset = index * options.majorUnit;\n                var date = options.min;\n                if (offset > 0) {\n                    date = addDuration(date, offset, options.baseUnit);\n                }\n                var unitFormat = labelOptions.dateFormats[options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, null, labelOptions);\n                return new AxisLabel(date, text, index, null, labelOptions);\n            },\n            translateRange: function (delta, exact) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / dateDiff(range.max, range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var from = addTicks(options.min, offset);\n                var to = addTicks(options.max, offset);\n                if (!exact) {\n                    from = addDuration(from, 0, baseUnit, weekStartDay);\n                    to = addDuration(to, 0, baseUnit, weekStartDay);\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            scaleRange: function (delta) {\n                var ref = this.options;\n                var from = ref.min;\n                var to = ref.max;\n                var rounds = Math.abs(delta);\n                while (rounds--) {\n                    var range = dateDiff(from, to);\n                    var step = Math.round(range * 0.1);\n                    if (delta < 0) {\n                        from = addTicks(from, step);\n                        to = addTicks(to, -step);\n                    } else {\n                        from = addTicks(from, -step);\n                        to = addTicks(to, step);\n                    }\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta, true);\n                var limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax);\n                if (limittedRange) {\n                    return {\n                        min: toDate(limittedRange.min),\n                        max: toDate(limittedRange.max)\n                    };\n                }\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: toDate(min),\n                    max: toDate(max)\n                };\n            },\n            zoomRange: function (delta) {\n                var range = this.scaleRange(delta);\n                var min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n                var max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n                return {\n                    min: min,\n                    max: max\n                };\n            }\n        });\n        function timeUnits(delta) {\n            var unit = HOURS;\n            if (delta >= TIME_PER_YEAR) {\n                unit = YEARS;\n            } else if (delta >= TIME_PER_MONTH) {\n                unit = MONTHS;\n            } else if (delta >= TIME_PER_WEEK) {\n                unit = WEEKS;\n            } else if (delta >= TIME_PER_DAY) {\n                unit = DAYS;\n            }\n            return unit;\n        }\n        function applyDefaults(seriesMin, seriesMax, options) {\n            var min = options.min || seriesMin;\n            var max = options.max || seriesMax;\n            var baseUnit = options.baseUnit || (max && min ? timeUnits(absoluteDateDiff(max, min)) : HOURS);\n            var baseUnitTime = TIME_PER_UNIT[baseUnit];\n            var autoMin = floorDate(toTime(min) - 1, baseUnit) || toDate(max);\n            var autoMax = ceilDate(toTime(max) + 1, baseUnit);\n            var userMajorUnit = options.majorUnit ? options.majorUnit : undefined;\n            var majorUnit = userMajorUnit || ceil(autoMajorUnit(autoMin.getTime(), autoMax.getTime()), baseUnitTime) / baseUnitTime;\n            var actualUnits = duration(autoMin, autoMax, baseUnit);\n            var totalUnits = ceil(actualUnits, majorUnit);\n            var unitsToAdd = totalUnits - actualUnits;\n            var head = Math.floor(unitsToAdd / 2);\n            var tail = unitsToAdd - head;\n            if (!options.baseUnit) {\n                delete options.baseUnit;\n            }\n            options.baseUnit = options.baseUnit || baseUnit;\n            options.min = options.min || addDuration(autoMin, -head, baseUnit);\n            options.max = options.max || addDuration(autoMax, tail, baseUnit);\n            options.minorUnit = options.minorUnit || majorUnit / 5;\n            options.majorUnit = majorUnit;\n            return options;\n        }\n        setDefaultOptions(DateValueAxis, {\n            type: DATE,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { dateFormats: DateLabelFormats }\n        });\n        var DEFAULT_MAJOR_UNIT = 10;\n        var LogarithmicAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                var axisOptions = deepExtend({\n                    majorUnit: DEFAULT_MAJOR_UNIT,\n                    min: seriesMin,\n                    max: seriesMax\n                }, options);\n                var base = axisOptions.majorUnit;\n                var autoMax = autoAxisMax$1(seriesMax, base);\n                var autoMin = autoAxisMin$1(seriesMin, seriesMax, axisOptions);\n                var range = initRange(autoMin, autoMax, axisOptions, options);\n                axisOptions.max = range.max;\n                axisOptions.min = range.min;\n                axisOptions.minorUnit = options.minorUnit || round(base - 1, DEFAULT_PRECISION);\n                Axis.fn.init.call(this, axisOptions, chartService);\n                this.totalMin = defined(options.min) ? Math.min(autoMin, options.min) : autoMin;\n                this.totalMax = defined(options.max) ? Math.max(autoMax, options.max) : autoMax;\n                this.logMin = round(log(range.min, base), DEFAULT_PRECISION);\n                this.logMax = round(log(range.max, base), DEFAULT_PRECISION);\n                this.seriesMin = seriesMin;\n                this.seriesMax = seriesMax;\n                this.createLabels();\n            },\n            startValue: function () {\n                return this.options.min;\n            },\n            getSlot: function (a, b, limit) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (logMax - logMin));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 1;\n                }\n                if (!defined(end)) {\n                    end = start || 1;\n                }\n                if (start <= 0 || end <= 0) {\n                    return null;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                start = log(start, base);\n                end = log(end, base);\n                var p1, p2;\n                if (vertical) {\n                    p1 = logMax - Math.max(start, end);\n                    p2 = logMax - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - logMin;\n                    p2 = Math.max(start, end) - logMin;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = (logMax - logMin) / lineSize;\n                var valueAxis = vertical ? Y : X;\n                var lineStart = lineBox[valueAxis + startEdge];\n                var offset = dir * (point[valueAxis] - lineStart);\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = logMin + valueOffset;\n                return round(Math.pow(base, value), DEFAULT_PRECISION);\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            scaleRange: function (delta) {\n                var base = this.options.majorUnit;\n                var offset = -delta;\n                return {\n                    min: Math.pow(base, this.logMin - offset),\n                    max: Math.pow(base, this.logMax + offset)\n                };\n            },\n            translateRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (logMax - logMin);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: Math.pow(base, logMin + offset),\n                    max: Math.pow(base, logMax + offset)\n                };\n            },\n            labelsCount: function () {\n                var floorMax = Math.floor(this.logMax);\n                var count = Math.floor(floorMax - this.logMin) + 1;\n                return count;\n            },\n            getMajorTickPositions: function () {\n                var ticks = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    ticks.push(position);\n                }, {\n                    step: 1,\n                    skip: 0\n                });\n                return ticks;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var majorTicks = options.majorTicks;\n                var minorTicks = options.minorTicks;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var lineBox = this.lineBox();\n                var ticks = [];\n                var tickLineOptions = { vertical: vertical };\n                function render(tickPosition, tickOptions) {\n                    tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                    tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                    tickLineOptions.position = tickPosition;\n                    lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                }\n                if (majorTicks.visible) {\n                    this.traverseMajorTicksPositions(render, majorTicks);\n                }\n                if (minorTicks.visible) {\n                    this.traverseMinorTicksPositions(render, minorTicks);\n                }\n                return ticks;\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var vertical = options.vertical;\n                var lineBox = altAxis.lineBox();\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPosition, gridLine) {\n                    if (!inArray(tickPosition, majorTicks)) {\n                        lineOptions.position = tickPosition;\n                        container.append(createAxisGridLine(lineOptions, gridLine));\n                        majorTicks.push(tickPosition);\n                    }\n                }\n                if (majorGridLines.visible) {\n                    this.traverseMajorTicksPositions(render, majorGridLines);\n                }\n                if (minorGridLines.visible) {\n                    this.traverseMinorTicksPositions(render, minorGridLines);\n                }\n                return container.children;\n            },\n            traverseMajorTicksPositions: function (callback, tickOptions) {\n                var ref = this._lineOptions();\n                var lineStart = ref.lineStart;\n                var step = ref.step;\n                var ref$1 = this;\n                var logMin = ref$1.logMin;\n                var logMax = ref$1.logMax;\n                for (var power = Math.ceil(logMin) + tickOptions.skip; power <= logMax; power += tickOptions.step) {\n                    var position = round(lineStart + step * (power - logMin), DEFAULT_PRECISION);\n                    callback(position, tickOptions);\n                }\n            },\n            traverseMinorTicksPositions: function (callback, tickOptions) {\n                var this$1 = this;\n                var ref = this.options;\n                var min = ref.min;\n                var max = ref.max;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var ref$1 = this._lineOptions();\n                var lineStart = ref$1.lineStart;\n                var step = ref$1.step;\n                var ref$2 = this;\n                var logMin = ref$2.logMin;\n                var logMax = ref$2.logMax;\n                var start = Math.floor(logMin);\n                for (var power = start; power < logMax; power++) {\n                    var minorOptions = this$1._minorIntervalOptions(power);\n                    for (var idx = tickOptions.skip; idx < minorUnit; idx += tickOptions.step) {\n                        var value = minorOptions.value + idx * minorOptions.minorStep;\n                        if (value > max) {\n                            break;\n                        }\n                        if (value >= min) {\n                            var position = round(lineStart + step * (log(value, base) - logMin), DEFAULT_PRECISION);\n                            callback(position, tickOptions);\n                        }\n                    }\n                }\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var power = Math.ceil(this.logMin + index);\n                var value = Math.pow(this.options.majorUnit, power);\n                var text = this.axisLabelText(value, null, labelOptions);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, -delta);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                var base = options.majorUnit;\n                var acceptOptionsRange = max > min && options.min && options.max && round(log(options.max, base) - log(options.min, base), DEFAULT_PRECISION) < 1;\n                var acceptNewRange = !(options.min === totalMin && options.max === totalMax) && round(log(max, base) - log(min, base), DEFAULT_PRECISION) >= 1;\n                if (acceptOptionsRange || acceptNewRange) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            _minorIntervalOptions: function (power) {\n                var ref = this.options;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var value = Math.pow(base, power);\n                var nextValue = Math.pow(base, power + 1);\n                var difference = nextValue - value;\n                var minorStep = difference / minorUnit;\n                return {\n                    value: value,\n                    minorStep: minorStep\n                };\n            },\n            _lineOptions: function () {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = dir * (lineSize / (this.logMax - this.logMin));\n                var lineStart = lineBox[valueAxis + startEdge];\n                return {\n                    step: step,\n                    lineStart: lineStart,\n                    lineBox: lineBox\n                };\n            }\n        });\n        function initRange(autoMin, autoMax, axisOptions, options) {\n            var min = axisOptions.min;\n            var max = axisOptions.max;\n            if (defined(axisOptions.axisCrossingValue) && axisOptions.axisCrossingValue <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.max)) {\n                max = autoMax;\n            } else if (options.max <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.min)) {\n                min = autoMin;\n            } else if (options.min <= 0) {\n                throwNegativeValuesError();\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function autoAxisMin$1(min, max, options) {\n            var base = options.majorUnit;\n            var autoMin = min;\n            if (min <= 0) {\n                autoMin = max <= 1 ? Math.pow(base, -2) : 1;\n            } else if (!options.narrowRange) {\n                autoMin = Math.pow(base, Math.floor(log(min, base)));\n            }\n            return autoMin;\n        }\n        function autoAxisMax$1(max, base) {\n            var logMaxRemainder = round(log(max, base), DEFAULT_PRECISION) % 1;\n            var autoMax;\n            if (max <= 0) {\n                autoMax = base;\n            } else if (logMaxRemainder !== 0 && (logMaxRemainder < 0.3 || logMaxRemainder > 0.9)) {\n                autoMax = Math.pow(base, log(max, base) + 0.2);\n            } else {\n                autoMax = Math.pow(base, Math.ceil(log(max, base)));\n            }\n            return autoMax;\n        }\n        function throwNegativeValuesError() {\n            throw new Error('Non positive values cannot be used for a logarithmic axis');\n        }\n        function log(y, x) {\n            return Math.log(y) / Math.log(x);\n        }\n        setDefaultOptions(LogarithmicAxis, {\n            type: 'log',\n            majorUnit: DEFAULT_MAJOR_UNIT,\n            minorUnit: 1,\n            axisCrossingValue: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            zIndex: 1,\n            _deferLabels: true\n        });\n        var GridLinesMixin = {\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var radius = Math.abs(this.box.center().y - altAxis.lineBox().y1);\n                var gridLines = [];\n                var skipMajor = false;\n                var majorAngles, minorAngles;\n                if (options.majorGridLines.visible) {\n                    majorAngles = this.majorGridLineAngles(altAxis);\n                    skipMajor = true;\n                    gridLines = this.renderMajorGridLines(majorAngles, radius, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    minorAngles = this.minorGridLineAngles(altAxis, skipMajor);\n                    append(gridLines, this.renderMinorGridLines(minorAngles, radius, options.minorGridLines, altAxis, skipMajor));\n                }\n                return gridLines;\n            },\n            renderMajorGridLines: function (angles, radius, options) {\n                return this.renderGridLines(angles, radius, options);\n            },\n            renderMinorGridLines: function (angles, radius, options, altAxis, skipMajor) {\n                var radiusCallback = this.radiusCallback && this.radiusCallback(radius, altAxis, skipMajor);\n                return this.renderGridLines(angles, radius, options, radiusCallback);\n            },\n            renderGridLines: function (angles, radius, options, radiusCallback) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var center = this.box.center();\n                var circle = new Circle([\n                    center.x,\n                    center.y\n                ], radius);\n                var container = this.gridLinesVisual();\n                for (var i = 0; i < angles.length; i++) {\n                    var line = new Path(style);\n                    if (radiusCallback) {\n                        circle.radius = radiusCallback(angles[i]);\n                    }\n                    line.moveTo(circle.center).lineTo(circle.pointAt(angles[i] + 180));\n                    container.append(line);\n                }\n                return container.children;\n            },\n            gridLineAngles: function (altAxis, size, skip, step, skipAngles) {\n                var this$1 = this;\n                var divs = this.intervals(size, skip, step, skipAngles);\n                var options = altAxis.options;\n                var altAxisVisible = options.visible && (options.line || {}).visible !== false;\n                return map(divs, function (d) {\n                    var alpha = this$1.intervalAngle(d);\n                    if (!altAxisVisible || alpha !== 90) {\n                        return alpha;\n                    }\n                });\n            }\n        };\n        var RadarCategoryAxis = CategoryAxis.extend({\n            range: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var labels = ref.labels;\n                var labelOptions = ref.options.labels;\n                var skip = labelOptions.skip || 0;\n                var step = labelOptions.step || 1;\n                var measureBox = new Box();\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(skip + i * step).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            intervals: function (size, skipOption, stepOption, skipAngles) {\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var options = this.options;\n                var categories = options.categories.length;\n                var divCount = categories / size || 1;\n                var divAngle = 360 / divCount;\n                var skip = skipOption || 0;\n                var step = stepOption || 1;\n                var divs = [];\n                var angle = 0;\n                for (var i = skip; i < divCount; i += step) {\n                    if (options.reverse) {\n                        angle = 360 - i * divAngle;\n                    } else {\n                        angle = i * divAngle;\n                    }\n                    angle = round(angle, COORD_PRECISION) % 360;\n                    if (!(skipAngles && inArray(angle, skipAngles))) {\n                        divs.push(angle);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(1);\n            },\n            minorIntervals: function () {\n                return this.intervals(0.5);\n            },\n            intervalAngle: function (interval) {\n                return (360 + interval + this.options.startAngle) % 360;\n            },\n            majorAngles: function () {\n                var this$1 = this;\n                return map(this.majorIntervals(), function (interval) {\n                    return this$1.intervalAngle(interval);\n                });\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, 1, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var ref = this.options;\n                var minorGridLines = ref.minorGridLines;\n                var majorGridLines = ref.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(1, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, 0.5, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            radiusCallback: function (radius, altAxis, skipMajor) {\n                if (altAxis.options.type !== ARC) {\n                    var minorAngle = rad(360 / (this.options.categories.length * 2));\n                    var minorRadius = Math.cos(minorAngle) * radius;\n                    var majorAngles = this.majorAngles();\n                    var radiusCallback = function (angle) {\n                        if (!skipMajor && inArray(angle, majorAngles)) {\n                            return radius;\n                        }\n                        return minorRadius;\n                    };\n                    return radiusCallback;\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var plotBands = this.options.plotBands || [];\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var slot = this$1.plotBandSlot(band);\n                    var singleSlot = this$1.getSlot(band.from);\n                    var head = band.from - Math.floor(band.from);\n                    slot.startAngle += head * singleSlot.angle;\n                    var tail = Math.ceil(band.to) - band.to;\n                    slot.angle -= (tail + head) * singleSlot.angle;\n                    var ring = ShapeBuilder.current.createRing(slot, {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    });\n                    group.append(ring);\n                }\n                this.appendVisual(group);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to - 1);\n            },\n            getSlot: function (from, to) {\n                var options = this.options;\n                var justified = options.justified;\n                var box = this.box;\n                var divs = this.majorAngles();\n                var totalDivs = divs.length;\n                var slotAngle = 360 / totalDivs;\n                var fromValue = from;\n                if (options.reverse && !justified) {\n                    fromValue = (fromValue + 1) % totalDivs;\n                }\n                fromValue = limitValue(Math.floor(fromValue), 0, totalDivs - 1);\n                var slotStart = divs[fromValue];\n                if (justified) {\n                    slotStart = slotStart - slotAngle / 2;\n                    if (slotStart < 0) {\n                        slotStart += 360;\n                    }\n                }\n                var toValue = limitValue(Math.ceil(to || fromValue), fromValue, totalDivs - 1);\n                var slots = toValue - fromValue + 1;\n                var angle = slotAngle * slots;\n                return new Ring(box.center(), 0, box.height() / 2, slotStart, angle);\n            },\n            slot: function (from, to) {\n                var slot = this.getSlot(from, to);\n                var startAngle = slot.startAngle + 180;\n                var endAngle = startAngle + slot.angle;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            pointCategoryIndex: function (point) {\n                var this$1 = this;\n                var length = this.options.categories.length;\n                var index = null;\n                for (var i = 0; i < length; i++) {\n                    var slot = this$1.getSlot(i);\n                    if (slot.containsPoint(point)) {\n                        index = i;\n                        break;\n                    }\n                }\n                return index;\n            }\n        });\n        setDefaultOptions(RadarCategoryAxis, {\n            startAngle: 90,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: { visible: true },\n            justified: true\n        });\n        deepExtend(RadarCategoryAxis.prototype, GridLinesMixin);\n        var PolarAxis = Axis.extend({\n            init: function (options, chartService) {\n                Axis.fn.init.call(this, options, chartService);\n                var instanceOptions = this.options;\n                instanceOptions.minorUnit = instanceOptions.minorUnit || instanceOptions.majorUnit / 2;\n            },\n            getDivisions: function (stepValue) {\n                return NumericAxis.prototype.getDivisions.call(this, stepValue) - 1;\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelOptions = ref.options.labels;\n                var skip = labelOptions.skip || 0;\n                var step = labelOptions.step || 1;\n                var measureBox = new Box();\n                var divs = this.intervals(options.majorUnit, skip, step);\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(divs[i]).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            intervals: function (size, skipOption, stepOption, skipAngles) {\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var min = this.options.min;\n                var divisions = this.getDivisions(size);\n                var divs = [];\n                var skip = skipOption || 0;\n                var step = stepOption || 1;\n                for (var i = skip; i < divisions; i += step) {\n                    var current = (360 + min + i * size) % 360;\n                    if (!(skipAngles && inArray(current, skipAngles))) {\n                        divs.push(current);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(this.options.majorUnit);\n            },\n            minorIntervals: function () {\n                return this.intervals(this.options.minorUnit);\n            },\n            intervalAngle: function (i) {\n                return (540 - i - this.options.startAngle) % 360;\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, this.options.majorUnit, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(options.majorUnit, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, options.minorUnit, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to);\n            },\n            getSlot: function (a, b) {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var startAngle = options.startAngle;\n                var start = limitValue(a, options.min, options.max);\n                var end = limitValue(b || start, start, options.max);\n                if (options.reverse) {\n                    start *= -1;\n                    end *= -1;\n                }\n                start = (540 - start - startAngle) % 360;\n                end = (540 - end - startAngle) % 360;\n                if (end < start) {\n                    var tmp = start;\n                    start = end;\n                    end = tmp;\n                }\n                return new Ring(box.center(), 0, box.height() / 2, start, end - start);\n            },\n            slot: function (from, to) {\n                if (to === void 0) {\n                    to = from;\n                }\n                var options = this.options;\n                var start = 360 - options.startAngle;\n                var slot = this.getSlot(from, to);\n                var min = Math.min(from, to);\n                var max = Math.max(from, to);\n                var startAngle, endAngle;\n                if (options.reverse) {\n                    startAngle = min;\n                    endAngle = max;\n                } else {\n                    startAngle = 360 - max;\n                    endAngle = 360 - min;\n                }\n                startAngle = (startAngle + start) % 360;\n                endAngle = (endAngle + start) % 360;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var center = this.box.center();\n                var dx = point.x - center.x;\n                var dy = point.y - center.y;\n                var theta = Math.round(deg(Math.atan2(dy, dx)));\n                var start = options.startAngle;\n                if (!options.reverse) {\n                    theta *= -1;\n                    start *= -1;\n                }\n                return (theta + start + 360) % 360;\n            },\n            valueRange: function () {\n                return {\n                    min: 0,\n                    max: Math.PI * 2\n                };\n            }\n        });\n        setDefaultOptions(PolarAxis, {\n            type: 'polar',\n            startAngle: 0,\n            reverse: false,\n            majorUnit: 60,\n            min: 0,\n            max: 360,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: {\n                color: BLACK,\n                visible: true,\n                width: 1\n            },\n            minorGridLines: { color: '#aaa' }\n        });\n        deepExtend(PolarAxis.prototype, GridLinesMixin, {\n            createPlotBands: RadarCategoryAxis.prototype.createPlotBands,\n            majorAngles: RadarCategoryAxis.prototype.majorAngles,\n            range: NumericAxis.prototype.range,\n            labelsCount: NumericAxis.prototype.labelsCount,\n            createAxisLabel: NumericAxis.prototype.createAxisLabel\n        });\n        var RadarNumericAxisMixin = {\n            options: { majorGridLines: { visible: true } },\n            createPlotBands: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var type = ref.majorGridLines.type;\n                var plotBands = ref.plotBands;\n                if (plotBands === void 0) {\n                    plotBands = [];\n                }\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var bandStyle = {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    };\n                    var slot = this$1.getSlot(band.from, band.to, true);\n                    var ring = new Ring(center, center.y - slot.y2, center.y - slot.y1, 0, 360);\n                    var shape = void 0;\n                    if (type === ARC) {\n                        shape = ShapeBuilder.current.createRing(ring, bandStyle);\n                    } else {\n                        shape = Path.fromPoints(this$1.plotBandPoints(ring, majorAngles), bandStyle).close();\n                    }\n                    group.append(shape);\n                }\n                this.appendVisual(group);\n            },\n            plotBandPoints: function (ring, angles) {\n                var innerPoints = [];\n                var outerPoints = [];\n                var center = [\n                    ring.center.x,\n                    ring.center.y\n                ];\n                var innerCircle = new Circle(center, ring.innerRadius);\n                var outerCircle = new Circle(center, ring.radius);\n                for (var i = 0; i < angles.length; i++) {\n                    innerPoints.push(innerCircle.pointAt(angles[i] + 180));\n                    outerPoints.push(outerCircle.pointAt(angles[i] + 180));\n                }\n                innerPoints.reverse();\n                innerPoints.push(innerPoints[0]);\n                outerPoints.push(outerPoints[0]);\n                return outerPoints.concat(innerPoints);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var majorTicks = this.radarMajorGridLinePositions();\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var gridLines = [];\n                if (options.majorGridLines.visible) {\n                    gridLines = this.renderGridLines(center, majorTicks, majorAngles, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    var minorTicks = this.radarMinorGridLinePositions();\n                    append(gridLines, this.renderGridLines(center, minorTicks, majorAngles, options.minorGridLines));\n                }\n                return gridLines;\n            },\n            renderGridLines: function (center, ticks, angles, options) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var skip = options.skip;\n                if (skip === void 0) {\n                    skip = 0;\n                }\n                var step = options.step;\n                if (step === void 0) {\n                    step = 0;\n                }\n                var container = this.gridLinesVisual();\n                for (var tickIx = skip; tickIx < ticks.length; tickIx += step) {\n                    var tickRadius = center.y - ticks[tickIx];\n                    if (tickRadius > 0) {\n                        var circle = new Circle([\n                            center.x,\n                            center.y\n                        ], tickRadius);\n                        if (options.type === ARC) {\n                            container.append(new drawing.Circle(circle, style));\n                        } else {\n                            var line = new Path(style);\n                            for (var angleIx = 0; angleIx < angles.length; angleIx++) {\n                                line.lineTo(circle.pointAt(angles[angleIx] + 180));\n                            }\n                            line.close();\n                            container.append(line);\n                        }\n                    }\n                }\n                return container.children;\n            },\n            getValue: function (point) {\n                var lineBox = this.lineBox();\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var radius = point.distanceTo(center);\n                var distance = radius;\n                if (this.options.majorGridLines.type !== ARC && majorAngles.length > 1) {\n                    var dx = point.x - center.x;\n                    var dy = point.y - center.y;\n                    var theta = (deg(Math.atan2(dy, dx)) + 540) % 360;\n                    majorAngles.sort(function (a, b) {\n                        return angularDistance(a, theta) - angularDistance(b, theta);\n                    });\n                    var midAngle = angularDistance(majorAngles[0], majorAngles[1]) / 2;\n                    var alpha = angularDistance(theta, majorAngles[0]);\n                    var gamma = 90 - midAngle;\n                    var beta = 180 - alpha - gamma;\n                    distance = radius * (Math.sin(rad(beta)) / Math.sin(rad(gamma)));\n                }\n                return this.axisType().prototype.getValue.call(this, new Point(lineBox.x1, lineBox.y2 - distance));\n            }\n        };\n        function angularDistance(a, b) {\n            return 180 - Math.abs(Math.abs(a - b) - 180);\n        }\n        var RadarNumericAxis = NumericAxis.extend({\n            radarMajorGridLinePositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            radarMinorGridLinePositions: function () {\n                var options = this.options;\n                var minorSkipStep = 0;\n                if (options.majorGridLines.visible) {\n                    minorSkipStep = options.majorUnit;\n                }\n                return this.getTickPositions(options.minorUnit, minorSkipStep);\n            },\n            axisType: function () {\n                return NumericAxis;\n            }\n        });\n        deepExtend(RadarNumericAxis.prototype, RadarNumericAxisMixin);\n        var RadarLogarithmicAxis = LogarithmicAxis.extend({\n            radarMajorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.majorGridLines);\n                return positions;\n            },\n            radarMinorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMinorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.minorGridLines);\n                return positions;\n            },\n            axisType: function () {\n                return LogarithmicAxis;\n            }\n        });\n        deepExtend(RadarLogarithmicAxis.prototype, RadarNumericAxisMixin);\n        var WEIGHT = 0.333;\n        var EXTREMUM_ALLOWED_DEVIATION = 0.01;\n        var CurveProcessor = Class.extend({\n            init: function (closed) {\n                this.closed = closed;\n            },\n            process: function (dataPoints) {\n                var this$1 = this;\n                var points = dataPoints.slice(0);\n                var segments = [];\n                var closed = this.closed;\n                var length = points.length;\n                if (length > 2) {\n                    this.removeDuplicates(0, points);\n                    length = points.length;\n                }\n                if (length < 2 || length === 2 && points[0].equals(points[1])) {\n                    return segments;\n                }\n                var p0 = points[0];\n                var p1 = points[1];\n                var p2 = points[2];\n                segments.push(new Segment(p0));\n                while (p0.equals(points[length - 1])) {\n                    closed = true;\n                    points.pop();\n                    length--;\n                }\n                if (length === 2) {\n                    var tangent = this.tangent(p0, p1, X, Y);\n                    last(segments).controlOut(this.firstControlPoint(tangent, p0, p1, X, Y));\n                    segments.push(new Segment(p1, this.secondControlPoint(tangent, p0, p1, X, Y)));\n                    return segments;\n                }\n                var initialControlPoint, lastControlPoint;\n                if (closed) {\n                    p0 = points[length - 1];\n                    p1 = points[0];\n                    p2 = points[1];\n                    var controlPoints = this.controlPoints(p0, p1, p2);\n                    initialControlPoint = controlPoints[1];\n                    lastControlPoint = controlPoints[0];\n                } else {\n                    var tangent$1 = this.tangent(p0, p1, X, Y);\n                    initialControlPoint = this.firstControlPoint(tangent$1, p0, p1, X, Y);\n                }\n                var cp0 = initialControlPoint;\n                for (var idx = 0; idx <= length - 3; idx++) {\n                    this$1.removeDuplicates(idx, points);\n                    length = points.length;\n                    if (idx + 3 <= length) {\n                        p0 = points[idx];\n                        p1 = points[idx + 1];\n                        p2 = points[idx + 2];\n                        var controlPoints$1 = this$1.controlPoints(p0, p1, p2);\n                        last(segments).controlOut(cp0);\n                        cp0 = controlPoints$1[1];\n                        var cp1 = controlPoints$1[0];\n                        segments.push(new Segment(p1, cp1));\n                    }\n                }\n                if (closed) {\n                    p0 = points[length - 2];\n                    p1 = points[length - 1];\n                    p2 = points[0];\n                    var controlPoints$2 = this.controlPoints(p0, p1, p2);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p1, controlPoints$2[0]));\n                    last(segments).controlOut(controlPoints$2[1]);\n                    segments.push(new Segment(p2, lastControlPoint));\n                } else {\n                    var tangent$2 = this.tangent(p1, p2, X, Y);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p2, this.secondControlPoint(tangent$2, p1, p2, X, Y)));\n                }\n                return segments;\n            },\n            removeDuplicates: function (idx, points) {\n                while (points[idx + 1] && (points[idx].equals(points[idx + 1]) || points[idx + 1].equals(points[idx + 2]))) {\n                    points.splice(idx + 1, 1);\n                }\n            },\n            invertAxis: function (p0, p1, p2) {\n                var invertAxis = false;\n                if (p0.x === p1.x) {\n                    invertAxis = true;\n                } else if (p1.x === p2.x) {\n                    if (p1.y < p2.y && p0.y <= p1.y || p2.y < p1.y && p1.y <= p0.y) {\n                        invertAxis = true;\n                    }\n                } else {\n                    var fn = this.lineFunction(p0, p1);\n                    var y2 = this.calculateFunction(fn, p2.x);\n                    if (!(p0.y <= p1.y && p2.y <= y2) && !(p1.y <= p0.y && p2.y >= y2)) {\n                        invertAxis = true;\n                    }\n                }\n                return invertAxis;\n            },\n            isLine: function (p0, p1, p2) {\n                var fn = this.lineFunction(p0, p1);\n                var y2 = this.calculateFunction(fn, p2.x);\n                return p0.x === p1.x && p1.x === p2.x || round(y2, 1) === round(p2.y, 1);\n            },\n            lineFunction: function (p1, p2) {\n                var a = (p2.y - p1.y) / (p2.x - p1.x);\n                var b = p1.y - a * p1.x;\n                return [\n                    b,\n                    a\n                ];\n            },\n            controlPoints: function (p0, p1, p2) {\n                var xField = X;\n                var yField = Y;\n                var restrict = false;\n                var switchOrientation = false;\n                var tangent;\n                if (this.isLine(p0, p1, p2)) {\n                    tangent = this.tangent(p0, p1, X, Y);\n                } else {\n                    var monotonic = {\n                        x: this.isMonotonicByField(p0, p1, p2, X),\n                        y: this.isMonotonicByField(p0, p1, p2, Y)\n                    };\n                    if (monotonic.x && monotonic.y) {\n                        tangent = this.tangent(p0, p2, X, Y);\n                        restrict = true;\n                    } else {\n                        if (this.invertAxis(p0, p1, p2)) {\n                            xField = Y;\n                            yField = X;\n                        }\n                        if (monotonic[xField]) {\n                            tangent = 0;\n                        } else {\n                            var sign;\n                            if (p2[yField] < p0[yField] && p0[yField] <= p1[yField] || p0[yField] < p2[yField] && p1[yField] <= p0[yField]) {\n                                sign = numberSign((p2[yField] - p0[yField]) * (p1[xField] - p0[xField]));\n                            } else {\n                                sign = -numberSign((p2[xField] - p0[xField]) * (p1[yField] - p0[yField]));\n                            }\n                            tangent = EXTREMUM_ALLOWED_DEVIATION * sign;\n                            switchOrientation = true;\n                        }\n                    }\n                }\n                var secondControlPoint = this.secondControlPoint(tangent, p0, p1, xField, yField);\n                if (switchOrientation) {\n                    var oldXField = xField;\n                    xField = yField;\n                    yField = oldXField;\n                }\n                var firstControlPoint = this.firstControlPoint(tangent, p1, p2, xField, yField);\n                if (restrict) {\n                    this.restrictControlPoint(p0, p1, secondControlPoint, tangent);\n                    this.restrictControlPoint(p1, p2, firstControlPoint, tangent);\n                }\n                return [\n                    secondControlPoint,\n                    firstControlPoint\n                ];\n            },\n            restrictControlPoint: function (p1, p2, cp, tangent) {\n                if (p1.y < p2.y) {\n                    if (p2.y < cp.y) {\n                        cp.x = p1.x + (p2.y - p1.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (cp.y < p1.y) {\n                        cp.x = p2.x - (p2.y - p1.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                } else {\n                    if (cp.y < p2.y) {\n                        cp.x = p1.x - (p1.y - p2.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (p1.y < cp.y) {\n                        cp.x = p2.x + (p1.y - p2.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                }\n            },\n            tangent: function (p0, p1, xField, yField) {\n                var x = p1[xField] - p0[xField];\n                var y = p1[yField] - p0[yField];\n                var tangent;\n                if (x === 0) {\n                    tangent = 0;\n                } else {\n                    tangent = y / x;\n                }\n                return tangent;\n            },\n            isMonotonicByField: function (p0, p1, p2, field) {\n                return p2[field] > p1[field] && p1[field] > p0[field] || p2[field] < p1[field] && p1[field] < p0[field];\n            },\n            firstControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t1 + distance, p0[yField] + distance * tangent, xField, yField);\n            },\n            secondControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t2 - distance, p3[yField] - distance * tangent, xField, yField);\n            },\n            point: function (xValue, yValue, xField, yField) {\n                var controlPoint = new geometry.Point();\n                controlPoint[xField] = xValue;\n                controlPoint[yField] = yValue;\n                return controlPoint;\n            },\n            calculateFunction: function (fn, x) {\n                var length = fn.length;\n                var result = 0;\n                for (var i = 0; i < length; i++) {\n                    result += Math.pow(x, i) * fn[i];\n                }\n                return result;\n            }\n        });\n        function numberSign(value) {\n            return value <= 0 ? -1 : 1;\n        }\n        dataviz.Gradients = GRADIENTS;\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            services: services,\n            autoMajorUnit: autoMajorUnit,\n            Point: Point,\n            Box: Box,\n            Ring: Ring,\n            Sector: Sector,\n            ShapeBuilder: ShapeBuilder,\n            ShapeElement: ShapeElement,\n            ChartElement: ChartElement,\n            BoxElement: BoxElement,\n            RootElement: RootElement,\n            FloatElement: FloatElement,\n            Text: Text,\n            TextBox: TextBox,\n            Title: Title,\n            AxisLabel: AxisLabel,\n            Axis: Axis,\n            Note: Note,\n            CategoryAxis: CategoryAxis,\n            DateCategoryAxis: DateCategoryAxis,\n            DateValueAxis: DateValueAxis,\n            NumericAxis: NumericAxis,\n            LogarithmicAxis: LogarithmicAxis,\n            PolarAxis: PolarAxis,\n            RadarCategoryAxis: RadarCategoryAxis,\n            RadarNumericAxis: RadarNumericAxis,\n            RadarLogarithmicAxis: RadarLogarithmicAxis,\n            CurveProcessor: CurveProcessor,\n            rectToBox: rectToBox,\n            addClass: addClass,\n            removeClass: removeClass,\n            alignPathToPixel: alignPathToPixel,\n            clockwise: clockwise,\n            deepExtend: deepExtend,\n            elementStyles: elementStyles,\n            getSpacing: getSpacing,\n            getter: __common_getter_js,\n            grep: grep,\n            hasClasses: hasClasses,\n            inArray: inArray,\n            interpolateValue: interpolateValue,\n            InstanceObserver: InstanceObserver,\n            isArray: isArray,\n            isFunction: isFunction,\n            isNumber: isNumber,\n            isObject: isObject,\n            isString: isString,\n            map: map,\n            mousewheelDelta: mousewheelDelta,\n            FontLoader: FontLoader,\n            setDefaultOptions: setDefaultOptions,\n            sparseArrayLimits: sparseArrayLimits,\n            styleValue: styleValue,\n            append: append,\n            bindEvents: bindEvents,\n            Class: Class,\n            defined: defined,\n            deg: deg,\n            elementOffset: elementOffset,\n            elementSize: elementSize,\n            eventElement: eventElement,\n            eventCoordinates: eventCoordinates,\n            last: last,\n            limitValue: limitValue,\n            logToConsole: kendo.logToConsole,\n            objectKey: objectKey,\n            rad: rad,\n            round: round,\n            unbindEvents: unbindEvents,\n            valueOrDefault: valueOrDefault,\n            absoluteDateDiff: absoluteDateDiff,\n            addDuration: addDuration,\n            addTicks: addTicks,\n            ceilDate: ceilDate,\n            dateComparer: dateComparer,\n            dateDiff: dateDiff,\n            dateEquals: dateEquals,\n            dateIndex: dateIndex,\n            duration: duration,\n            floorDate: floorDate,\n            lteDateIndex: lteDateIndex,\n            startOfWeek: startOfWeek,\n            toDate: toDate,\n            parseDate: parseDate,\n            parseDates: parseDates,\n            toTime: toTime\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/core', ['dataviz/core/kendo-core'], f);\n}(function () {\n    (function ($) {\n        var dataviz = kendo.dataviz;\n        var services = dataviz.services;\n        var draw = kendo.drawing;\n        dataviz.ExportMixin = {\n            extend: function (proto, skipLegacy) {\n                if (!proto.exportVisual) {\n                    throw new Error('Mixin target has no exportVisual method defined.');\n                }\n                proto.exportSVG = this.exportSVG;\n                proto.exportImage = this.exportImage;\n                proto.exportPDF = this.exportPDF;\n                if (!skipLegacy) {\n                    proto.svg = this.svg;\n                    proto.imageDataURL = this.imageDataURL;\n                }\n            },\n            exportSVG: function (options) {\n                return draw.exportSVG(this.exportVisual(), options);\n            },\n            exportImage: function (options) {\n                return draw.exportImage(this.exportVisual(options), options);\n            },\n            exportPDF: function (options) {\n                return draw.exportPDF(this.exportVisual(), options);\n            },\n            svg: function () {\n                if (draw.svg.Surface) {\n                    return draw.svg.exportGroup(this.exportVisual());\n                } else {\n                    throw new Error('SVG Export failed. Unable to export instantiate kendo.drawing.svg.Surface');\n                }\n            },\n            imageDataURL: function () {\n                if (!kendo.support.canvas) {\n                    return null;\n                }\n                if (draw.canvas.Surface) {\n                    var container = $('<div />').css({\n                        display: 'none',\n                        width: this.element.width(),\n                        height: this.element.height()\n                    }).appendTo(document.body);\n                    var surface = new draw.canvas.Surface(container[0]);\n                    surface.draw(this.exportVisual());\n                    var image = surface._rootElement.toDataURL();\n                    surface.destroy();\n                    container.remove();\n                    return image;\n                } else {\n                    throw new Error('Image Export failed. Unable to export instantiate kendo.drawing.canvas.Surface');\n                }\n            }\n        };\n        services.IntlService.register({\n            format: function (format) {\n                return kendo.format.apply(null, [format].concat(Array.prototype.slice.call(arguments, 1)));\n            },\n            toString: kendo.toString,\n            parseDate: kendo.parseDate\n        });\n        services.TemplateService.register({ compile: kendo.template });\n        dataviz.Point2D = dataviz.Point;\n        dataviz.Box2D = dataviz.Box;\n        dataviz.mwDelta = function (e) {\n            return dataviz.mousewheelDelta(e.originalEvent);\n        };\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.core', [\n        'dataviz/core/kendo-core',\n        'dataviz/core/core'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.core',\n        name: 'Core',\n        description: 'The DataViz core functions',\n        category: 'dataviz',\n        depends: [\n            'core',\n            'drawing'\n        ],\n        hidden: true\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}