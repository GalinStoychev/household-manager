@using HouseholdManager.Common.Constants
@model HouseholdManager.Web.Areas.Household.Models.ExpenseViewModel
@{
    var householdName = this.Request.Cookies[CommonConstants.CurrentHousehold]?[CommonConstants.CurrentHouseholdName];
}

@using (Html.BeginForm("Edit", "Expense", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="row form-group text-center">
        <div class="col-md-12">
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control exp-name" })
            <br />
            @Html.DropDownListFor(m => m.Category, Model.CategoriesList, new { @class = "form-control exp-category" })
            <hr class="hl-edit-exp" />
        </div>
    </div>

    <div class="row expense-details">
        <div class="col-md-3 col-md-offset-3 col-sm-4 col-sm-offset-2 col-xs-6">
            <ul>
                <li>
                    <strong>@Html.DisplayNameFor(m => m.CreatedBy): </strong><span>@Model.CreatedBy</span>
                </li>
                <li>
                    <strong>@Html.LabelFor(m => m.AssignedUser): </strong>
                    @Html.ValidationMessageFor(m => m.AssignedUser, "", new { @class = "text-danger" })
                    @Html.DropDownListFor(m => m.AssignedUser, Model.Users, "Choose user", new { @class = "form-control" })
                </li>
                <li>
                    <strong>@Html.LabelFor(m => m.ExpectedCost): </strong>
                    @Html.ValidationMessageFor(m => m.ExpectedCost, "", new { @class = "text-danger" })
                    @Html.TextBoxFor(m => m.ExpectedCost, new { @class = "form-control" })
                </li>
            </ul>
        </div>
        <div class="col-md-3 col-sm-4 col-xs-6">
            <ul>
                <li>
                    <strong>@Html.DisplayNameFor(m => m.CreatedOn): </strong><span>@Model.CreatedOn</span>
                </li>
                <li>
                    <strong>@Html.LabelFor(m => m.DueDate): </strong>
                    @Html.ValidationMessageFor(m => m.DueDate, "", new { @class = "text-danger" })
                    @(Html.Kendo().DatePickerFor(m => m.DueDate)
                        .Value(Model.DueDate)
                        .Format("yyyy/MM/dd")
                        .HtmlAttributes(new { style = "width: 100%" })
                    )
                </li>
            </ul>
        </div>

    </div>
    <div class="expense-btns">
        <input type="submit" value="SAVE" class="btn btn-success" />
        @Html.ActionLink("CANCEL", "Index", "Expense", null, new { @class = "btn btn-danger" })
    </div>
}

<div class="row">
    <div class="col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
        <hr />
    </div>
</div>


@section scriptss {
    @Scripts.Render("~/bundles/jqueryval")
}